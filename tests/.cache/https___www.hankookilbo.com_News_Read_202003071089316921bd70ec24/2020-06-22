<!DOCTYPE html>
<html lang="ko-KR">
<head>
    <!-- meta -->
    <meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=0">
<meta name="format-detection" content="telephone=no">
<meta http-equiv="X-UA-Compatible" content="ie=edge">

<!-- google ad sence -->
<script data-ad-client="ca-pub-2704741335862169" async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>

<link rel="icon" href="/images/favicon.ico" type="image/x-icon"><!-- // meta -->

    <!-- seo -->
    <!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-53476308-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());

    gtag('config', 'UA-53476308-1');
</script>

<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src='https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);})(window,document,'script','dataLayer','GTM-59599H7');</script>
<!-- End Google Tag Manager -->

<meta name="title" content="트럼프 “동맹 한국과 코로나19 긴밀 협력”... 美 26개 주 확산">
        <meta name="keywords" content="">
        <meta name="description" content="
안정성 강조 의도지만 누적 사망 15명 달해도널드 트럼프 미국 대통령이 6일 조지아주 애틀란타의 질병통제예방센터를 방문해 직원들에게 신종 코로나바이러스 감염증 사태와 관련한 정부의 입장을 설명하고 있다. 애틀란타=AP 연합뉴스도널드 트럼프 미국 대통령이 한국과의 동맹 관계를 내세워 “신종 코로나바이러스 감염증(코로나19) 사태에 긴밀히 협력하고 있다” - ">

        <meta property="og:url" content="https://www.hankookilbo.com/article/page/202003071089316921.html">
        <meta property="og:site_name" content="한국일보">
        <meta property="og:locale" content="ko_KR">
        <meta property="og:type" content="article" >
        <meta property="og:title" content="트럼프 “동맹 한국과 코로나19 긴밀 협력”" >
        <meta property="og:description" content="美 26개 주 확산… 누적 사망 15명 달해 " >
        <meta property="og:image" content="http://newsimg.hankookilbo.com/cms/articlerelease/2020/03/07/202003071089316921_2.jpg" >

        <meta property="article:author" content="https://www.facebook.com/hkilbo">
        <meta property="article:publisher" content="https://www.facebook.com/hkilbo">

        <meta name="twitter:site" content="@hankookilbo" >
        <meta name="twitter:card" content="summary_large_image">
        <meta name="twitter:url" content="https://www.hankookilbo.com/article/page/202003071089316921.html">
        <meta name="twitter:title" content="트럼프 “동맹 한국과 코로나19 긴밀 협력”" >
        <meta name="twitter:description" content="美 26개 주 확산… 누적 사망 15명 달해 " >
        <meta name="twitter:image" content="http://newsimg.hankookilbo.com/cms/articlerelease/2020/03/07/202003071089316921_2.jpg" >
        <meta name="twitter:creator" content="@hankookilbo" >

        <meta property="article:published_time" content="2020-03-07T11:00:25.000+0900">
        <meta property="article:section" content="국제">
            <meta property="article:section2" content="국제일반 ">
        <meta property="fb:pages" content="157370204315766" >

<title>트럼프 “동맹 한국과 코로나19 긴밀 협력”... 美 26개 주 확산</title>
<!-- // seo -->

    <!-- header-script -->
    <link rel="stylesheet" href="/css/lib/ion.rangeSlider.min.css">
<link rel="stylesheet" href="/css/lib/datepicker.min.css">
<link rel="stylesheet" href="/css/lib/jquery.mCustomScrollbar.min.css">
<link rel="stylesheet" href="/css/style_web.css">
<script src="/js/lib/jquery-1.12.4.min.js"></script>
<!-- [if lt IE 9]>
<script src="/js/lib/selectivizr.min.js"></script>
<![endif]-->
<script src="/js/lib/modernizr-custom.js"></script>
<script src="/js/lib/detectizr.min.js"></script>
<script src="/js/lib/jquery.cookie.min.js"></script>
<script src="/js/vendor.js"></script>
<script src="/js/split/popup.js"></script>
<script src="/js/split/icheck.js"></script>
<script src="/js/split/customScroll.js"></script>

<script src="/js/article-notice.js"></script>
<script src="/js/common.js"></script>
<script src="/js/lib/hangul.min.js" type="text/javascript"></script>

<link rel="stylesheet" href="https://uicdn.toast.com/tui.chart/latest/tui-chart.min.css">
<script src="https://uicdn.toast.com/tui.chart/latest/tui-chart-all.min.js"></script>
<script type="text/javascript" src="https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=xuh6ou62fp"></script>
<input type="hidden" id="fileServer" value="http://newsimg.hankookilbo.com"/>

<script>
    // 기본 이미지
    (function(){
        var NOTFOUNDSRC = '/images/Default-Image.png';
        document.addEventListener('error', function(e){
            // image 404
            if(e.target.nodeName.toLowerCase() == 'img' && e.target.getAttribute('src') != NOTFOUNDSRC){
                e.target.src = NOTFOUNDSRC;
            }
        }, true);
    })();

    // 기사 닫기 클릭 시 돌아갈 url 정의
    if ('MAIN' != 'MAIN') {
        
        Cookies.set('closeUrl', '/', { path: '/' });
        
    }

    // CDN 제외 설정
    $.ajaxSetup({
        beforeSend : function(xhr){
            xhr.setRequestHeader("Cache-Control", "no-cache");
        }
    });

    // 로그인 flag
    loggedIn = Cookies.get('accessToken');


</script>


<!-- // header-script -->
<style>
    .module-slider  .img-box img,
    .module-vs .img-list .img-box img,
    .module-intro .img-box img {
        width: 100% !important;
        height: 100% !important;
        padding: 0;
    }
</style>
</head>
<body>
    <!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-59599H7"
                  height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) --><!-- wrap -->
<div class="wrap">
    <!-- .container .end -->
    <!-- end: end 페이지 기본 -->
    <div class="container end ">
        <!-- .end-header -->
<div class="end-header">
    <!-- .col-left -->
    <div class="col-left">
        <a href="javascript:onClickLogo()" class="logo">
            <span class="blind">한국일보</span>
        </a>
    </div>
    <div class="mini-title">
        <h2 class="title">트럼프 “동맹 한국과 코로나19 긴밀 협력”… 美 26개 주 확산</h2>
    </div>
    <!-- // .col-left -->
    <!-- .col-right -->
    <div class="col-right">
        <a href="javascript:;" class="btn-prev-news blind">이전기사</a>
        <!-- 읽기모드 -->
        <button type="button" class="btn-mode">읽기모드</button>
        <!-- .bg-set -->
        <div class="bg-set">
            <span class="bg-set-rdo">
                <input type="radio" name="rdo_bg" id="rdo_bg_01" checked>
                <label for="rdo_bg_01" title="배경 설정">
                    <span class="blind">흰색 배경</span>
                </label>
            </span>
            <span class="bg-set-rdo bg-yellow">
                <input type="radio" name="rdo_bg" id="rdo_bg_02" data-color="bg-yellow">
                <label for="rdo_bg_02" title="배경 설정">
                    <span class="blind">회색 배경</span>
                </label>
            </span>
            <span class="bg-set-rdo bg-black">
                <input type="radio" name="rdo_bg" id="rdo_bg_03" data-color="bg-black">
                <label for="rdo_bg_03" title="배경 설정">
                    <span class="blind">검은색 배경</span>
                </label>
            </span>
        </div>
        <!-- // .bg-set -->
        <!-- .scale-set -->
        <span class="scale-set">
                    <button type="button" class="anchor" title="글자크기 설정"></button>
                    <ul class="scale-set-list">
                        <li><a href="javascript:;" class="scale-fs14">가나다라</a></li>
                        <li><a href="javascript:;" class="scale-fs16">가나다라</a></li>
                        <li><a href="javascript:;" class="scale-fs18 on">가나다라</a></li>
                        <li><a href="javascript:;" class="scale-fs22">가나다라</a></li>
                        <li><a href="javascript:;" class="scale-fs26">가나다라</a></li>
                    </ul>
                </span>
        <!-- // .scale-set -->
        <!-- // 읽기모드 -->
        <button type="button" class="btn-print" title="인쇄"
                onclick="window.open('../Read/Print/' + '202003071089316921', '')">
            <span class="blind">인쇄</span>
        </button>
        <!-- .tooltip-box -->
        <div class="tooltip-box">
            <button type="button" class="btn-share open-tip prevent-close" title="공유">
                <span class="blind">공유</span>
            </button>
            <ul class="tooltip share-list">
                <li class="kakao"><a href="javascript:onClickShareKakao()"><span class="blind">카카오</span></a></li>
                <li class="facebook"><a href="javascript:;"
                                        onclick="onClickShareFB()"
                                        class="btn-close"><span class="blind">페이스북</span></a></li>
                <li class="twitter"><a href="javascript:;" data-js="twitter-share" class="btn-close"
                                       onclick="onClickShareTwitter()"><span
                    class="blind">트위터</span></a></li>
                <li class="email"><a href="javascript:;" class="btn-close" onclick="onClickShareEmail()"><span class="blind">이메일</span></a>
                </li>
                <li class="url toast-box"><a href="javascript:;" class="btn-close btn-copy"
                                             onclick="copyCurrentUrlToClipboard()"><span
                    class="blind">URL</span></a></li>
            </ul>
            <!-- .toast-popup -->
            <div class="toast-popup left">
                <p>기사 URL이 복사되었습니다.</p>
            </div>
            <!-- 복사된 값이 저장됨 -->
            <input type="hidden" class="copied-value">
            <!-- // .toast-popup -->
        </div>
        <!-- // .tooltip-box -->
        <!-- .tooltip-box .bookmark-box -->
        <div class="tooltip-box bookmark-box">
            <button id="top-save-article-btn" type="button" class="btn-bookmark" title="기사저장"
                    onclick="onClickSaveArticleBtn('top')">
                <span class="blind">기사저장</span>
            </button>
            <!-- .toast-popup -->
            <div id="top-save-article-popup" class="toast-popup left add-pop">
                <p>기사가 저장 되었습니다.</p>
            </div>
            <div id="top-delete-article-popup" class="toast-popup left cancel-pop">
                <p>기사저장이 취소 되었습니다.</p>
            </div>
        </div>
        <!-- // .tooltip-box .bookmark-box -->
        <button type="button" class="btn-end-close" title="닫기">
            <span class="blind">닫기</span>
        </button>
    </div>
    <!-- // .col-right -->
</div>
<!-- // .end-header -->

<!-- dimmed -->
<div class="dimmed"></div>
<!-- //dimmed -->


<!-- // 구독 취소 팝업 -->

<script>
    // 엔드페이지 진입시 마지막 읽은 기사를 DB에 저장
    var param = {lastReadArticleId: '202003071089316921'};
    $.ajax({
        url: '/users/me',
        method: 'PATCH',
        contentType: 'application/json',
        data: JSON.stringify(param),
        success: function (response) {
            console.log(response);
            var flag = response;
            if (flag) {
                console.log('이어보기 기사 추가 성공')
            } else {
                console.log('이어보기 기사 추가 실패')
            }
        }
    });

    function onClickLogo() {
        removeLastReadArticle();
        location.replace('/');
    }

    $(document).ready(function() {
        history.pushState(null, null, location.href);
        window.onpopstate = function(event) {
            removeLastReadArticle();
            history.back()
        }
    })
</script>
<div class="end-top">
            <!-- .inner -->
            <div class="inner">
                <!-- .col-main -->
                <div class="col-main full-size">
                    <div class="ttl ">
    <a href="">
        </a>
</div>
<h2 class="title">
    트럼프 “동맹 한국과 코로나19 긴밀 협력”… 美 26개 주 확산</h2>
<div class="info">
    <dl>
        <dt>입력</dt>
        <dd>2020.03.07 11:00</dd>
        </dl>
    <div class="tool-bar">
    <!-- .tooltip-box -->
    <div class="tooltip-box">
        <button type="button" class="btn-like-all open-tip">
            <span class="blind">좋아요</span>
        </button>
        <!-- .like-detail -->
        <div class="like-detail tooltip">
            <ul>
                <li class="like" id="likeCntLi">0</li>
                <li class="unlike" id="dislikeCntLi">0</li>
            </ul>
        </div>
        <!-- // .like-detail -->
    </div>
    <!-- // .tooltip-box -->
    <span class="count" id="sympathyCntSpan">0</span>
    <button type="button" class="btn-comment">
        <span class="blind">댓글달기</span>
    </button>
    <span class="count" id="commentCntSpan">0</span>
</div>
</div>
</div>
                <!-- // .col-main -->
                <!-- .col-sub -->
                <div class="col-sub">
                    </div>
                <!-- // .col-sub -->
            </div>
        </div>
        <!-- .end-body -->
        <div class="end-body" style="">
            <!-- .inner -->
                <div class="inner">
                    <div class="col-main">
                        <p><strong></strong></p><p><strong>
안정성 강조 의도지만 누적 사망 15명 달해</strong></p><figure class="story-media"><div class="photo"><img src="http://newsimg.hankookilbo.com/cms/articlerelease/2020/03/07/202003071089316921_2.jpg" alt=""></div><figcaption class="caption"><span>도널드 트럼프 미국 대통령이 6일 조지아주 애틀란타의 질병통제예방센터를 방문해 직원들에게 신종 코로나바이러스 감염증 사태와 관련한 정부의 입장을 설명하고 있다. 애틀란타=AP 연합뉴스</span></figcaption></figure><p>도널드 트럼프 미국 대통령이 한국과의 동맹 관계를 내세워 “신종 코로나바이러스 감염증(코로나19) 사태에 긴밀히 협력하고 있다”고 말했다. 겉으론 협력을 강조했지만 한국의 심각한 감염병 상황을 언급하면서 미국의 안정성을 부각하려는 의도가 강했다.  </p><p>트럼프 대통령은 6일(현지시간) 조지아주 애틀란타의 미 질병통제예방센터(CDC)를 찾아 “그들(한국)은 우리와 매우 다른 입장이다. 한국은 감염자가 많고 미국은 그렇지 않다”고 말했다. 그러면서 “한국은 동맹이라 아주 밀접하게 협력하고 있다”고 강조했다. </p><p>트럼프는 엉뚱하게 한미 자유무역협정(FTA) 문제를 끌어 들이기도 했다. 그는 “우리는 동맹이지만 개정 이전 한미 FTA는 불공정했다”고 말한 뒤 “(코로나19) 검사도 비슷하며 사실 한국은 미국에 전화해 이 사람들(CDC 당국자)에게 조언을 구하고 있다”고 주장했다. 미국 공중보건의 우수성을 자랑하려는 취지였다. </p><p>그는 감염증 진단ㆍ검사 관련 질문이 다시 나오자 “그들(한국)은 검사를 하는 게 아니라 샘플조사를 한다. 차(드라이브 스루)로 지나가면서 샘플을 제공한다”면서 “우리도 할 수 있지만 효과적이지 않다”고 설명했다. </p><p>트럼프는 미국인들이 편안하게 지내도 되느냐는 질문에 “만약 중국에, 이탈리아의 특정 지역에, 한국에 가는 문제를 지금 말하는 것이라면 다른 결정”라면서도 “편히 느껴도 된다”고 말했다. 미 행정부는 중국에 ‘입국 금지’를, 한국 대구와 이탈리아 북부지역 2곳에는 ‘여행 금지’ 권고를 한 상태다. 그는 중국 이탈리아 한국의 사례를 거론하며 미국의 코로나19 사망ㆍ확진자가 적다는 점을 수시로 강조했다. </p><p>트럼프는 이날 CDC 방문을 비롯해 코로나19 대응 행보를 이어가고 있다. 11월 대선을 앞두고 선거전이 본격화하면서 여론 악화를 막으려는 의지로 읽힌다. </p><p>그러나 그의 바람과 달리 미국 내 코로나19는 빠른 속도로 확산하고 있다. 감염증 발원지인 워싱턴주(州)를 넘어 동부(뉴욕주)에서도 확진자가 속출하는 등 벌써 26개 주에서 감염 환자가 보고됐다. CNN방송은 CDC를 인용해 “미국 전역의 코로나19 확진자가 282명에 달한다”고 전했다. 사망자도 15명이나 된다. </p><p>전날 캘리포니아주에서 사망한 71세 남성이 다녀간 크루즈선 ‘그랜드 프린세스’호에서도 21명의 무더기 감염이 확인됐다. 미국의 코로나19 대책을 총괄하는 마이크 펜스 부통령은 이날 “주말에 크루즈선을 항구로 이동시키고 탑승자 전원의 감염 여부를 검사할 계획”이라고 말했다. 현재 이 배에는 3,533명의 승객 및 승무원이 승선해 있다. </p><p>김이삭 기자 hiro@hankookilbo.com</p></div>
                    <!-- .col-sub -->
                    <div class="col-sub">
                            <!-- .side-link-box -->
                            <div class="side-link-box">
    <h2 id="topViewArticlesTitle"></h2>
    <ol id="topViewArticlesContainer">
        <li><a></a></li>
    </ol>
    <h2>국제</h2>
        <ol id="topViewArticlesSubContainer">
            <li><a></a></li>
        </ol>
    <div class="img-box">
                    <script language="javascript" src="//ad.hankookilbo.com/js/midas/hankookilbo/endpage@wing_s"></script>
                </div>
            </div>

<script>
    var sectionCd = 'WORLD';
    var seriesId = '';
    var url = '/top-articles?limit=10';
    if (sectionCd && sectionCd.length) {
        url += '&sectionCd=' + sectionCd;
    }
    if (seriesId && seriesId.length) {
        url += '&seriesId=' + seriesId;
    }

    // 많이 본 기사 조회
    $.ajax({
        url: url,
        type: 'GET',
        dataType: 'json',
        contentType: 'application/json',
        timeout: 30000,
        success: function (data) {
            var $title = $('#topViewArticlesTitle');
            $title.text(data.title ? data.title + ' 인기 기사' : '많이 본 기사');

            var $target = $('#topViewArticlesContainer');
            var $li = $target.find('li');
            $target.empty();
            var articles = data.articles;
            for (var i = 0; i < articles.length; i++) {
                var article = articles[i];
                var item = $li.clone();
                item.find('a').append('<span class="num">' + (i + 1) + '</span>' + article.articleTitle);
                item.find('a').attr('href', article.articleUrl);
                item.find('a').attr('target', '_' + article.articleLinkTargetType);
                $target.append(item);
            }

            $target = $('#topViewArticlesSubContainer');
            if ($target) {
                $li = $target.find('li');
                $target.empty();
            }
            articles = data.sectionArticles;
            if (articles) {
                for (var i = 0; i < articles.length; i++) {
                    var article = articles[i];
                    var item = $li.clone();
                    item.find('a').append('<span class="num">' + (i + 1) + '</span>' + article.articleTitle);
                    item.find('a').attr('href', article.articleUrl);
                    item.find('a').attr('target', '_' + article.articleLinkTargetType);
                    $target.append(item);
                }
            }

        },
        error: function (req, stat, err) {
            // console.log(err);
        }
    }); // ajax
</script>
<!-- // .side-link-box -->
                        </div>
                    <!-- // .col-sub -->
                </div>
                <!-- // .inner -->

                <div class="ad-banner divide type-quattro">
    <div class="inner">
        <script>
            
            var adArray = ['endpage@divide01', 'endpage@divide02', 'endpage@divide03'];
            

            // 중복 처리
            var $divideList = $('.ad-banner.divide');
            if ($divideList.length) {
                for (var i = 0; i < $divideList.length; i++) {
                    var id = $($divideList[i]).find('.ad-item').attr('data-id');
                    var adIndex = adArray.indexOf(id);
                    if (adIndex > -1) {
                        adArray.splice(adIndex, 1);
                    }
                }
            }

            var pageType = 'ARTICLE';

            var adIndex = 0;
            var id = adArray[adIndex];
            for (var i = 0; i < 4; i++) {
                document.write('<div class="ad-item" data-id="' + id + '">');
                if (pageType == 'ARTICLE') {
                    document.write('<script language="javascript" src="//ad.hankookilbo.com/js/midas/hankookilbo/' + id + '-040' + (i+1) + '"><\/script>');
                } else {
                    document.write('<script language="javascript" src="//ad.hankookilbo.com/js/midas/hankookilbo/' + id + '0' + (i+1) + '"><\/script>');
                }
                document.write('</div>');
            }

            $( document ).ready(function() {
                // 스크립트 삭제(태그 개수에 따라 위치가 잡히기 때문에 필요 없는 태그 삭제)
                $('.ad-banner script').remove();
            });
        </script>

    </div>
</div>
<div class="inner">
                    <div class="col-main">
                        <div class="btn-area">
    <button id="article-like-btn" class="btn-like" title="공감">
            <span class="icon icon-heart"></span>
            <span id="bottom-like-cnt" class="count">0</span>
        </button>
        <button id="article-dislike-btn" class="btn-unlike" title="비공감">
            <span class="icon icon-heart-x"></span>
            <span id="bottom-dislike-cnt" class="count">0</span>
        </button>
    <!-- .tooltip-box -->
    <div class="tooltip-box">
        <button class="btn-share open-tip" title="공유">
            <span>공유</span>
        </button>
        <ul class="tooltip share-list">
            <li class="kakao"><a href="javascript:onClickShareKakao()"><span class="blind">카카오</span></a></li>
            <li class="facebook"><a href="javascript:;"
                                    onclick="onClickShareFB()"
                                    class="btn-close"><span class="blind">페이스북</span></a></li>
            <li class="twitter"><a href="javascript:;" data-js="twitter-share" class="btn-close"
                                   onclick="onClickShareTwitter()"><span
                class="blind">트위터</span></a></li>
            <li class="email"><a href="javascript:;" class="btn-close" onclick="onClickShareEmail()"><span class="blind">이메일</span></a>
            </li>
            <li class="url toast-box"><a href="javascript:;" class="btn-close btn-copy"
                                         onclick="copyCurrentUrlToClipboard()"><span
                class="blind">URL</span></a></li>
        </ul>
        <!-- .toast-popup -->
        <div class="toast-popup left">
            <p>기사 URL이 복사되었습니다.</p>
        </div>
        <!-- 복사된 값이 저장됨 -->
        <input type="hidden" class="copied-value">
        <!-- // .toast-popup -->
    </div>
    <!-- // .tooltip-box -->
    <!-- .tooltip-box .bookmark-box -->
    <div class="tooltip-box bookmark-box">
        <button id="bottom-save-article-btn" class="btn-bookmark" title="기사저장" onclick="onClickSaveArticleBtn()">
            <span>기사저장</span>
        </button>
        <div id="bottom-save-article-popup" class="toast-popup left add-pop">
            <p>기사가 저장 되었습니다.</p>
        </div>
        <div id="bottom-delete-article-popup" class="toast-popup left cancel-pop">
            <p>기사저장이 취소 되었습니다.</p>
        </div>
    </div>
    <!-- // .tooltip-box .bookmark-box -->
</div>
<a href="https://media.naver.com/channel/promotion.nhn?oid=469" target="_blank" class="naver-banner">
    <span class="blind">한국일보가 직접 편집한 뉴스 네이버엣도 보실 수 있습니다.</span>
    <img src="/images/thumb/banner-naver.png" alt="뉴스스탠드에서 구독하기">
</a>

<div class="newspaper-subscribe">
    <span class="ns-text">세상을 보는 균형, 한국일보<span class="copy">Copyright ⓒ Hankookilbo</span></span>
    <a href="http://company.hankookilbo.com/Subscription/apply.aspx" target="_blank" class="ns-link">신문 구독신청</a>
</div>

<input type="hidden" id="fileServer" value="http://newsimg.hankookilbo.com"/>
<script>
    var subscribeLocation;


    /**
     * 관련된 기사 조회
     */
    var url = '/article/202003071089316921/related';
    $.ajax({
        url: url,
        method: "GET",
        contentType: 'application/json',
        success: function(data) {
            console.log('========== 관련된 기사 조회 성공 ==========');
            console.log(data);
            for (var i = 0; i < data.length; i++) {
                var item = data[i];

                if (i === 0) {
                    if ('General' !== 'Movie') {
                        $('#related-article-list').append('<li class="top-news">\n' +
                            '                    <a href="' + getArticleUrl(item) + '" target="_' + item.articleLinkTargetType + '">\n' +
                            '                        <div class="col-text">\n' +
                            '                            <div class="title">' + getArticleCutName(item) + item.articleTitle  + '</div>\n' +
                            '                            <div\n' +
                            '                                class="reg-date">' + getFormattedDate(item.articleDeployDt, 'yyyy.mm.dd hh:mm') + '</div>\n' +
                            '                        </div>\n' +
                            '                        <div class="col-img">\n' +
                            '                            <div class="img-box' + (item.articleContentsType == 'Movie' ? ' video' : '') + '">\n' +
                            '                                <img src="' + getArticleThumbnailFilePath($('#fileServer').val(), item.articleId, item.repAttach) + '" alt="">\n' +
                            '                            </div>\n' +
                            '                        </div>\n' +
                            '                    </a>\n' +
                            '                </li>')
                    } else {

                    }
                } else {
                    if ('General' !== 'Movie') {
                        $('#related-article-list').append('<li><a href="' + getArticleUrl(item) + '" target="_' + item.articleLinkTargetType + '">\n' +
                            '                                                <div class="title">' + getArticleCutName(item) + item.articleTitle  + '</div>\n' +
                            '                                            </a></li>')
                    } else {
                        $('#related-article-list-movie').append('<li>\n' +
                            '                    <div class="col-img">\n' +
                            '                        <div class="img-box video" style="width: 100%; height: 100%">\n' +
                            '                            <a href="' + getArticleUrl(item) + '" target="_' + item.articleLinkTargetType + '"><img src="' + getArticleThumbnailFilePath($('#fileServer').val(), item.articleId, item.repAttach) + '" alt=""></a>\n' +
                            '                        </div>\n' +
                            '                    </div>\n' +
                            '                    <div class="col-text">\n' +
                            '                        <div class="title">\n' +
                            '                            <a href="' + getArticleUrl(item) + '" target="_' + item.articleLinkTargetType + '">' + getArticleCutName(item) + item.articleTitle  + '</a>\n' +
                            '                        </div>\n' +
                            '                    </div>\n' +
                            '                </li>')
                    }
                }
            }

        },
        error: function (req, stat, err) {
            console.log('========== 관련된 기사 조회 실패 ==========');
            console.log(err);
        }
    });

    /**
     * 기사 구독 버튼 클릭
     */
    function onClickSubscribeArticleBtn(location) {
        subscribeLocation = location;
        // 로그인 확인
        if (Cookies.get('accessToken') === undefined) {
            $('#sign-in-request-alert').openPopup();
            return;
        }

        if ($('#top-subscription-btn').hasClass('on')) {
            $('#delete-subscription-popup').openPopup();
            return;
        }

        subscribeArticle(location);
    }

    /**
     * 기사 구독
     */
    function subscribeArticle() {
        // 기사 구독 api를 쏜다 -> 중복체크는 controller에서 한다.
        $.ajax({
            url: '/article/activity',
            contentType: 'application/json',
            method: 'POST',
            data: JSON.stringify({
                activityType: 'Subscription',
                activitySubscriptionType: '',
                activitySubscriptionId: ''
            }),
            success: function (response) {
                var flag = response;
                if (flag) {
                    // css를 바꾼다
                console.log('기사 구독 -> 성공');
                    $('.btn-subsc').toggleClass('on');
                    if ($('.btn-subsc').hasClass('on')) {
                        if (subscribeLocation === 'top') {
                            $('#top-subscription-save-popup').show();
                        } else {
                            $('#bottom-subscription-save-popup').show();
                        }
                    } else {
                        if (subscribeLocation === 'top') {
                            $('#top-subscription-delete-popup').show();
                        } else {
                            $('#bottom-subscription-delete-popup').show();
                        }
                    }
                } else {
                    console.log('기사 구독 -> 실패')
                }
            },
            fail: function () {
                console.log('기사 구독 -> 에러')
            }
        })
    }

    /**
     * 기사 저장 버튼 클릭
     */
    function onClickSaveArticleBtn(location) {
        // 로그인 확인
        if (Cookies.get('accessToken') === undefined) {
            $('#sign-in-request-alert').openPopup();
            return;
        }

        // 기사 저장 api를 쏜다 -> 중복체크는 controller에서 한다.
        $.ajax({
            url: '/article/activity',
            method: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
                articleId: '202003071089316921',
                activityType: 'Save'
            }),
            success: function (response) {
                console.log('기사 저장 -> 성공');
                var flag = response;
                if (flag) {
                    // 기사 저장 css 토글
                    $('.btn-bookmark').toggleClass('on');
                    // on이면 추가 popup off면 제거 popup
                    if ($('.btn-bookmark').hasClass('on')) {
                        if (location === 'top') {
                            $('#top-save-article-popup').show();
                        } else {
                            $('#bottom-save-article-popup').show();
                        }
                    } else {
                        if (location === 'top') {
                            $('#top-delete-article-popup').show();
                        } else {
                            $('#bottom-delete-article-popup').show();
                        }
                    }
                    // css를 바꾼다
                } else {
                    console.log('기사 저장 -> 실패')
                }
            },
            fail: function () {
                console.log('기사 저장 -> 에러')
            }
        })
    }

    /**
     * 팝업 리스너들.. 외부 클릭시 숨긴다.
     */
    var bottomSaveArticlePopup = $('#bottom-save-article-popup');
    var bottomDeleteArticlePopup = $('#bottom-delete-article-popup');
    var bottomSubscriptionSavePopup = $('#bottom-subscription-save-popup');
    var bottomSubscriptionDeletePopup = $('#bottom-subscription-delete-popup');

    $(document).mouseup(function (e) {
        // if the target of the click isn't the container nor a descendant of the container
        if (!bottomSaveArticlePopup.is(e.target) && bottomSaveArticlePopup.has(e.target).length === 0) {
            bottomSaveArticlePopup.hide();
            bottomDeleteArticlePopup.hide();
            bottomSubscriptionSavePopup.hide();
            bottomSubscriptionDeletePopup.hide();
        }
    });

</script>
</div>
                </div>
            </div>
        <!-- // .end-body -->

        <!-- .comment-area -->
    <div class="comment-area">
        <!-- .inner -->
        <div class="inner">
            <!-- .comment-title -->
            <h3 class="comment-title">댓글<span class="count">0</span>
            </h3>
            <!-- // .comment-title -->

            <!-- .comment-edit -->
            <div class="comment-edit">
                <button id="commentInputContainer" type="button" class="btn-open-edit">
                    댓글을 입력해 주세요.
                    <span class="btn-reg">등록</span>
                </button>
                <div class="textarea-wrap">
                    <div class="textarea">
                        <textarea onfocus="onFocusInput();" id="commentInput" rows="4" maxlength="250"
                                  placeholder="댓글을 입력해 주세요."></textarea>
                    </div>
                    <div class="textarea-bottom">
                        <span id="commentInputCount" class="count"><strong>0</strong> / 250</span>
                        <button id="submitCommentButton" class="btn-reg" type="button" disabled
                                onclick="onClickSubmitComment()">등록
                        </button>
                    </div>
                </div>
            </div>
            <!-- // .comment-edit -->

            <!-- .comment-sort-tab -->
            <div class="comment-sort-tab">
                <a id="sortLike" href="javascript:onClickSort('like', this)" class="anchor on">좋아요순</a>
                <a id="sortRecent" href="javascript:onClickSort('recent', this)" class="anchor">최신순</a>

                <a href="javascript:onClickRefresh()" class="refresh">새로고침</a>
            </div>
            <!-- // .comment-sort-tab -->

            <!-- .comment-list -->
            <div class="comment-list">
                <ul id="comment-parent-container">
                </ul>
                <!-- // .list-paging -->
            </div>
            <!-- // .comment-list -->
        </div>
        <!-- // .inner -->

        <!-- .banner-right -->
        <div class="banner-right">
                    <script>
                        var adArray = ['wing_l01', 'wing_l02'];
                        for (var i = 0; i < adArray.length; i++) {
                            document.write('<div class="img-box">');
                            document.write('<script language="javascript" src="//ad.hankookilbo.com/js/midas/hankookilbo/endpage@' + adArray[i] + '"><\/script>');
                            document.write('</div>');
                        }
                    </script>
                </div>
            <!-- // .banner-right -->
    </div>

    <!-- .ad-banner -->
    <div class="ad-banner divide type-quattro">
    <div class="inner">
        <script>
            
            var adArray = ['endpage@divide01', 'endpage@divide02', 'endpage@divide03'];
            

            // 중복 처리
            var $divideList = $('.ad-banner.divide');
            if ($divideList.length) {
                for (var i = 0; i < $divideList.length; i++) {
                    var id = $($divideList[i]).find('.ad-item').attr('data-id');
                    var adIndex = adArray.indexOf(id);
                    if (adIndex > -1) {
                        adArray.splice(adIndex, 1);
                    }
                }
            }

            var pageType = 'ARTICLE';

            var adIndex = 0;
            var id = adArray[adIndex];
            for (var i = 0; i < 4; i++) {
                document.write('<div class="ad-item" data-id="' + id + '">');
                if (pageType == 'ARTICLE') {
                    document.write('<script language="javascript" src="//ad.hankookilbo.com/js/midas/hankookilbo/' + id + '-040' + (i+1) + '"><\/script>');
                } else {
                    document.write('<script language="javascript" src="//ad.hankookilbo.com/js/midas/hankookilbo/' + id + '0' + (i+1) + '"><\/script>');
                }
                document.write('</div>');
            }

            $( document ).ready(function() {
                // 스크립트 삭제(태그 개수에 따라 위치가 잡히기 때문에 필요 없는 태그 삭제)
                $('.ad-banner script').remove();
            });
        </script>

    </div>
</div>
<!-- // .ad-banner -->

    <div class="popup-alert report-popup large">
        <h1 class="tit">
            댓글 신고
        </h1>
        <button class="btn-close" onclick="$('.report-popup').closePopup();">
            <span class="blind">닫기</span>
        </button>
        <div class="cont">
            <h2 class="tit">신고 사유를 선택해주세요.</h2>
            <div class="radio-list">
                <label>
                    <input type="radio" value="Discomfort" name="report-radio" checked>
                    <span>불쾌감 조성 (비방/욕설/인신공격)</span>
                </label>
                <label>
                    <input type="radio" value="IllegalAD" name="report-radio">
                    <span>불법 광고 또는 스팸</span>
                </label>
                <label>
                    <input type="radio" value="ObscenePost" name="report-radio">
                    <span>음란성 게시글</span>
                </label>
                <label>
                    <input type="radio" value="PersonalInfringement" name="report-radio">
                    <span>사생활 침해 또는 명예훼손</span>
                </label>
            </div>
        </div>
        <div class="btn-area">
            <!-- <button class="btn-box-black" type="button">확인</button> -->
            <button class="btn-black font-gray" type="button" onclick="$('.report-popup').closePopup();">취소</button>
            <button class="btn-black font-medium" type="button" onclick="onClickSubmitCommentReport()">확인</button>
        </div>
    </div>

    <div id="comment-delete-popup" class="popup-alert">
        <h1 class="tit">
            삭제 확인
        </h1>
        <div class="cont">
            <p>
                작성하신 글을 삭제하시겠습니까?
            </p>
        </div>
        <div class="btn-area">
            <button class="btn-gray" type="button" onclick="$('#comment-delete-popup').closePopup();">아니오</button>
            <button class="btn-black" type="button" onclick="deleteComment()">네</button>
        </div>
    </div>


    <script>
        var selectedComment;
        var selectedSort = 'likeCnt,desc';
        var commentData = {
            total: 0,
            list: [],
            pageNum: 0,
            pageSize: 0,
            size: 0,
            startRow: 0,
            endRow: 0,
            pages: 0,
            prePage: 0,
            nextPage: 0,
            isFirstPage: false,
            isLastPage: false,
            hasPreviousPage: false,
            hasNextPage: false,
            navigatePages: 0,
            navigatepageNums: [],
            navigateFirstPage: 0,
            navigateLastPage: 0,
        };
        // 페이징 시작 페이지
        var begin;
        // 페이징 끝 페이지
        var end;
        // 현재 url을 받는다
        var currentUrl = unescape(location.href);
        //파라미터만 자르고, 다시 &그분자를 잘라서 배열에 넣는다.
        var paramArr = (currentUrl.substring(currentUrl.indexOf("?") + 1, currentUrl.length)).split("&");
        // Page를 제외한 parameters
        var parameters = "";
        for (var i = 1; i < paramArr.length; i++) {
            parameters += "&" + paramArr[i];
        }
        var selectedOpinionIdForReport;
        var selectedOpinionIdForDelete;

        // 페이지가 켜지면 댓글들을 받아온다
        getComments('likeCnt,desc', '');

        /**
         * 기사 댓글 달기 클릭시 로그인 체크
         */
        function onFocusInput() {
            if (Cookies.get('accessToken') === undefined) {
                $('#sign-in-request-alert').openPopup();
                return;
            }
        }

        /**
         * 기사 댓글 달기 클릭시 css 변화
         */
        function onFocusCommentInput(id) {
            if (Cookies.get('accessToken') === undefined) {
                $('#sign-in-request-alert').openPopup();
                return;
            }
            $('#commentReplyInput' + id).on('keyup', function (input) {
                if (input.target.value.length > 0) {
                    $('#commentSubmitButton' + id).prop("disabled", false)
                } else {
                    $('#commentSubmitButton' + id).prop("disabled", true)
                }
                $('#commentReplyInputCount' + id).html('<strong>' + input.target.value.length + '</strong> / 250');
            })
        }

        /**
         * 기사 답글 달기 클릭시 css 변화
         */
        function onClickCommentReplyInput(id) {
            if (Cookies.get('accessToken') === undefined) {
                $('#sign-in-request-alert').openPopup();
                return;
            }
            setTimeout(function () {
                $('#commentReplyInput' + id).focus();
            }, 100);

            $('#commentReplyInputContainer' + id).addClass('on');
        }

        /**
         * 댓글 신고 등록
         */
        function onClickSubmitCommentReport() {
            var selectedReportType = $("input[name='report-radio']:checked").val();
            console.log(selectedReportType);
            if (selectedOpinionIdForReport !== undefined) {
                checkReportExist(selectedOpinionIdForReport, selectedReportType);
            }
        }

        /**
         * 댓글 등록하기
         */
        function onClickSubmitComment() {
            var comment = $('#commentInput').val();
            console.log(comment);
            if (comment.length < 251) {
                $.ajax({
                    url: '/article/202003071089316921/comment',
                    method: "POST",
                    contentType: 'application/json',
                    data: JSON.stringify({
                        contents: comment,
                    })
                }).success(function (response) {
                    console.log('댓글 등록 -> 댓글 등록 성공');
                    getComments(selectedSort, commentData.pageNum);
                    console.log(response);
                    $('#commentInput').val('');
                    $('#commentInputContainer').removeClass('on');
                    $('#commentInputCount').html('<strong>0</strong> / 250')
                }).fail(function (err) {
                    console.log('댓글 등록 -> 댓글 등록 에러');
                });
            }
        }

        /**
         * 답글 등록하기
         */
        function onClickSubmitCommentReply(id) {
            var commentReply = $('#commentReplyInput' + id).val();
            var url = '/article/202003071089316921/comment';
            console.log('대댓글 등록 -> ' + url);
            console.log(commentReply);
            if (commentReply.length < 251) {
                $.ajax({
                    url: url,
                    method: "POST",
                    contentType: 'application/json',
                    data: JSON.stringify({
                        contents: commentReply,
                        opinionParentId: id
                    })
                }).success(function (response) {
                    console.log('댓글 등록 -> 댓글 등록 성공');
                    getComments(selectedSort, commentData.pageNum);
                    console.log(response);
                }).fail(function (err) {
                    console.log('댓글 등록 -> 댓글 등록 에러');
                });
            }
        }

        /**
         * 답글 toggle - 열고 닫기
         */
        function onClickToggleReply(id) {
            $('#commentReply' + id).toggleClass('blind')
        }

        /**
         * 답글 전체보기 toggle 버튼 - 열고 닫기
         */
        function onClickShowAllReply(id) {
            console.log(id);
            console.log($('#commentReplyShowAllButton' + id).text());
            if ($('#commentReplyShowAllButton' + id).text() === '전체보기') {
                var children = $('#comment-children-container' + id).children();

                // 전체보기 클릭시 숨어있는 리스트 보여준다.
                for (var i = 0; i < children.length; i++) {
                    $(children[i]).removeClass('blind');
                }
                $('#commentReplyShowAllButton' + id).html("전체접기");
                $('#commentReplyShowAllButton' + id).toggleClass("on");
                $('#commentReply' + id).removeClass('blind');

            } else {
                $('#commentReplyShowAllButton' + id).html("전체보기");
                $('#commentReplyShowAllButton' + id).toggleClass("on");
                $('#commentReply' + id).addClass('blind');
                scrollTo(id);
            }
        }

        /**
         * 댓글 좋아요
         */
        function onClickLike(id) {
            checkSympathyExist(id, 'Like');
        }

        /**
         * 댓글 싫어요
         */
        function onClickDislike(id) {
            checkSympathyExist(id, 'Dislike');
        }

        /**
         * 댓글 신고
         */
        function onClickReport(id) {
            if (Cookies.get('accessToken') === undefined) {
                $('#sign-in-request-alert').openPopup();
                return;
            }
            console.log(id);
            selectedOpinionIdForReport = id;
            $('.report-popup').openPopup();
        }

        /**
         * 댓글 삭제하기 팝업 오픈
         */
        function onClickDeleteComment(id) {
            selectedOpinionIdForDelete = id;
            $('#comment-delete-popup').openPopup();
        }

        /**
         * 댓글 삭제하기
         */
        function deleteComment() {
            if (selectedOpinionIdForDelete === undefined) {
                return;
            }
            var url = '/article/202003071089316921/comment/' + selectedOpinionIdForDelete;
            console.log(url);
            $.ajax({
                url: url,
                method: 'DELETE'
            }).success(function (response) {
                console.log('기사 댓글 삭제 -> 성공');
                console.log(response);
                var flag = response;
                if (flag) {
                    alert("댓글이 삭제되었습니다.");
                    $('#comment-delete-popup').closePopup();
                    $('#comment-parent-container').empty();
                    getComments(selectedSort, commentData.pageNum);
                    selectedOpinionIdForDelete = undefined;
                } else {
                    alert("댓글 삭제 에러");
                    $('#comment-delete-popup').closePopup();
                    selectedOpinionIdForDelete = undefined;
                }
            }).fail(function (err) {
                console.log('기사 댓글 삭제 -> 에러');
            });
        }

        /**
         * 공감 중복 체크 및 추가 제거 함수
         */
        function checkSympathyExist(id, type) {
            var url = '/comment/' + id + '/exist?opinionSympathyType=' + type;
            console.log('공감 중복 체크 -> ' + url);
            $.ajax({
                url: url,
                method: 'GET',
                contentType: 'application/json',
            }).success(function (response) {
                console.log('공감 중복 체크 -> 성공');
                var flag = response;
                console.log(flag);
                // 이미 공감이 있으면 삭제 없으면 추가
                if (flag) {
                    deleteSympathy(id, type)
                } else {
                    addSympathy(id, type)
                }
            }).fail(function (err) {
                console.log('공감 중복 체크 -> 에러');
            });
        }

        /**
         * 신고하기 중복 체크
         */
        function checkReportExist(id, reportType) {
            var url = '/comment/' + id + '/exist?opinionSympathyType=Report';
            console.log('신고하기 중복 체크 -> ' + url);
            $.ajax({
                url: url,
                method: 'GET',
                contentType: 'application/json',
            }).success(function (response) {
                console.log('신고하기 중복 체크 -> 성공');
                console.log(response);
                var flag = response;

                // 이미 공감이 있으면 삭제 없으면 추가
                if (flag) {
                    alert('이미 신고한 댓글입니다.')
                } else {
                    addReport(id, reportType)
                }
            }).fail(function (err) {
                console.log('신고하기 중복 체크 -> 에러');
            });
        }

        /**
         * 공감 추가 함수
         */
        function addSympathy(id, type) {
            var url = '/comment/' + id + '?opinionSympathyType=' + type;
            console.log('공감 추가 -> ' + url);
            $.ajax({
                url: url,
                method: 'POST',
                contentType: 'application/json',
            }).success(function (response) {
                console.log('공감 추가 -> 성공');
                if (type === 'Like') {
                    var button = $('#commentLikeButton' + id).html().toString();
                    var currentCount = parseInt(button.replace('<span class="thumb">좋아요</span>', ''));
                    $('#commentLikeButton' + id).toggleClass('on');
                    $('#commentLikeButton' + id).html('<span class="thumb">좋아요</span>' + (currentCount + 1));
                } else if (type === 'Dislike') {
                    var button = $('#commentDislikeButton' + id).html().toString();
                    var currentCount = parseInt(button.replace('<span class="thumb">싫어요</span>', ''));
                    $('#commentDislikeButton' + id).html('<span class="thumb">싫어요</span>' + (currentCount + 1));
                    $('#commentDislikeButton' + id).toggleClass('on');
                }
                console.log(response);
            }).fail(function (err) {
                console.log('공감 추가 -> 에러');
            });
        }

        /**
         * 공감 제거 함수
         */
        function deleteSympathy(id, type) {
            var url = '/comment/' + id + '?opinionSympathyType=' + type;

            console.log('공감 삭제 -> ' + url);
            $.ajax({
                url: url,
                method: 'DELETE',
                contentType: 'application/json',
            }).success(function (response) {
                console.log('공감 삭제 -> 성공');
                console.log(response);
                if (type === 'Like') {
                    var button = $('#commentLikeButton' + id).html().toString();
                    var currentCount = parseInt(button.replace('<span class="thumb">좋아요</span>', ''));
                    console.log(button.replace('<span class="thumb">좋아요</span>', ''));
                    $('#commentLikeButton' + id).html('<span class="thumb">좋아요</span>' + (currentCount - 1))
                } else if (type === 'Dislike') {
                    var button = $('#commentDislikeButton' + id).html().toString();
                    var currentCount = parseInt(button.replace('<span class="thumb">싫어요</span>', ''));
                    button.replace('<span class="thumb">싫어요</span>', '')
                    $('#commentDislikeButton' + id).html('<span class="thumb">싫어요</span>' + (currentCount - 1))
                }
            }).fail(function (err) {
                console.log('공감 삭제 -> 에러');
            });
        }

        /**
         * 신고하기 함수
         */
        function addReport(id, reportType) {
            var url = '/comment/' + id + '?opinionSympathyType=Report&rptType=' + reportType;
            console.log('신고하기 등록 -> ' + url);
            $.ajax({
                url: url,
                method: 'POST',
                contentType: 'application/json',
            }).success(function (response) {
                console.log('신고하기 등록 -> 성공');
                console.log(response);
                selectedOpinionIdForReport = undefined;
                alert("신고가 접수되었습니다.");
                $('.report-popup').closePopup();
            }).fail(function (err) {
                alert("신고하기 에러 발생");
                console.log('신고하기 등록 -> 에러');
                selectedOpinionIdForReport = undefined;
            });
        }


        /**
         * 기사 댓글 조회
         * @param sort
         * @param pageNum
         */
        function getComments(sort, pageNum) {
            var url = '/article/202003071089316921/comment?Page=' + pageNum + '&sort=' + sort;
            console.log('기사 댓글 조회 -> ' + url);
            $.ajax({
                url: url,
                method: "GET",
                contentType: 'application/json'
            }).success(function (response) {
                commentData = response;

                // 토탈 댓글 개수 설정 위쪽
                $('#commentCntSpan').html('' + commentData.total + '');

                // 댓글 총 개수 설정 아래쪽
                $('.comment-title').html('댓글<span class="count">' + commentData.total + '</span>');

                // 리스트 초기화
                $('.comment-list').html('<ul id="comment-parent-container"></ul>');

                if (commentData.total !== 0) {
                    begin = (commentData.pageNum / 10) * 10 + 1;
                    if (commentData.pageNum % 10 === 0) {
                        begin -= 10;
                    }
                    end = begin + 9;
                    if (commentData.pages < begin + 9) {
                        end = begin;
                    }

                    // 댓글이 없을 때 보여지는 element 제거
                    $('.comment-empty').remove();


                    for (var i = 0; i < commentData.list.length; i++) {
                        // 아이템
                        var item;
                        // 삭제 or 신고 버튼
                        var deleteReportButton;
                        // 전체보기 버튼
                        var showAllButtonFlag = 'blind';

                        item = commentData.list[i];
                        item.contents = item.contents.replace(/\n/g, '<br>');
                        // 전체보기 버튼 유무 설정
                        if (item.children.length >= 10) {
                            showAllButtonFlag = '';
                        }

                        // 본인이 쓴 댓글이면 삭제 버튼, 타인이 쓴 댓글이면 신고 버튼
                        if (item.memId !== Cookies.get('user_id')) {
                            deleteReportButton = '<a id="reportDeleteButton' + item.opinionId + '" href="javascript:onClickReport(\'' + item.opinionId + '\')" class="report">신고</a>'
                        } else {
                            deleteReportButton = '<a id="reportDeleteButton' + item.opinionId + '" href="javascript:onClickDeleteComment(\'' + item.opinionId + '\')" class="report">삭제</a>'
                        }

                        $('#comment-parent-container').append('<li class="comment-item" id="comment' + item.opinionId + '">\n' +
                            '  <!-- .comment-box -->\n' +
                            '  <div class="comment-box">\n' +
                            '    <div class="info">\n' +
                            '      <span class="id">' + item.penName + '</span>\n' +
                            '      <span class="date">' + getFormattedDate(item.createdDt, 'yyyy.mm.dd hh:mm') + '</span>\n' +
                            '      <span class="bar"></span>\n' +
                            deleteReportButton +
                            '    </div>\n' +
                            '    <div class="text">\n' +
                            '      ' + item.contents + '\n' +
                            '    </div>\n' +
                            '    <div class="tool">\n' +
                            '      <button type="button" class="btn-reply" onclick="onClickToggleReply(\'' + item.opinionId + '\')">답글<span class="count">' + item.children.length + '</span></button>\n' +
                            '      <div class="btn-area">\n' +
                            '        <button id="commentLikeButton' + item.opinionId + '" class="btn-thumbup" onclick="onClickLike(\'' + item.opinionId + '\')"><span\n' +
                            '            class="thumb">좋아요</span>' + item.likeCnt + '</button>\n' +
                            '        <button id="commentDislikeButton' + item.opinionId + '" class="btn-thumbdown" onclick="onClickDislike(\'' + item.opinionId + '\')"><span class="thumb">싫어요</span>' + item.dislikeCnt + '</button>\n' +
                            '      </div>\n' +
                            '    </div>\n' +
                            '  </div>\n' +
                            '  <div class="reply-list blind" id="commentReply' + item.opinionId + '">\n' +
                            '    <!-- .reply-edit -->\n' +
                            '    <div class="reply-edit" onclick="onClickCommentReplyInput(\'' + item.opinionId + '\')">\n' +
                            '      <button id="commentReplyInputContainer' + item.opinionId + '" type="button" class="btn-open-edit">답글을 입력 해주세요.\n' +
                            '        <span class="btn-reg">등록</span>\n' +
                            '      </button>\n' +
                            '      <div class="textarea-wrap">\n' +
                            '        <div class="textarea">\n' +
                            '          <textarea onfocus="onFocusCommentInput(\'' + item.opinionId + '\')" id="commentReplyInput' + item.opinionId + '" rows="3" maxlength="250"\n' +
                            '            placeholder="답글을 입력해 주세요."></textarea>\n' +
                            '        </div>\n' +
                            '        <div class="textarea-bottom">\n' +
                            '          <span id="commentReplyInputCount' + item.opinionId + '" class="count"><strong>0</strong> / 250</span>\n' +
                            '          <button id="commentSubmitButton' + item.opinionId + '" class="btn-reg" type="button" disabled onclick="onClickSubmitCommentReply(\'' + item.opinionId + '\')">등록</button>\n' +
                            '        </div>\n' +
                            '      </div>\n' +
                            '    </div>\n' +
                            '    <!-- // .reply-edit -->\n' +
                            '    <ul id="comment-children-container' + item.opinionId + '">\n' +
                            '      \n' +
                            '    </ul>\n' +
                            '    <!-- .btn-all -->\n' +
                            '    \n' +
                            '    <button id="commentReplyShowAllButton' + item.opinionId + '" class="btn-all ' + showAllButtonFlag + '"\n' +
                            '      onClick="onClickShowAllReply(\'' + item.opinionId + '\')">전체보기</button>\n' +
                            '    <!-- // .btn-all -->\n' +
                            '  </div>\n' +
                            '</li>');

                        // 답글
                        for (var j = 0; j < item.children.length; j++) {
                            var childrenItem = item.children[j];
                            childrenItem.contents = childrenItem.contents.replace(/\n/g, '<br>');
                            var blindClass = "";
                            var childDeleteReportButton;

                            // 본인이 쓴 댓글이면 삭제 버튼, 타인이 쓴 댓글이면 신고 버튼
                            if (childrenItem.memId !== Cookies.get('user_id')) {
                                childDeleteReportButton = '<a id="reportDeleteButton' + childrenItem.opinionId + '" href="javascript:onClickReport(\'' + childrenItem.opinionId + '\')" class="report">신고</a>'
                            } else {
                                childDeleteReportButton = '<a id="reportDeleteButton' + childrenItem.opinionId + '" href="javascript:onClickDeleteComment(\'' + childrenItem.opinionId + '\')" class="report">삭제</a>'
                            }

                            if (j > 9) {
                                blindClass = "blind";
                            }
                            $('#comment-children-container' + item.opinionId).append('<li class="' + blindClass + '">\n' +
                                '  <div class="comment-box">\n' +
                                '    <div class="info">\n' +
                                '      <span class="id">' + childrenItem.penName + '</span>\n' +
                                '      <span class="date">' + getFormattedDate(childrenItem.createdDt, 'yyyy.mm.dd hh:mm') + '</span>\n' +
                                '      <span class="bar"></span>\n' +
                                childDeleteReportButton +
                                '    </div>\n' +
                                '    <div class="text">\n' +
                                '      ' + childrenItem.contents + '\n' +
                                '    </div>\n' +
                                '    <div class="tool">\n' +
                                '      <div class="btn-area">\n' +
                                '        <button id="commentLikeButton' + childrenItem.opinionId + '" class="btn-thumbup" onclick="onClickLike(\'' + childrenItem.opinionId + '\')"><span\n' +
                                '            class="thumb">좋아요</span>' + childrenItem.likeCnt + '</button>\n' +
                                '        <button id="commentDislikeButton' + childrenItem.opinionId + '" class="btn-thumbdown" onclick="onClickDislike(\'' + childrenItem.opinionId + '\')"><span\n' +
                                '            class="thumb">싫어요</span>' + childrenItem.dislikeCnt + '</button>\n' +
                                '      </div>\n' +
                                '    </div>\n' +
                                '  </div>\n' +
                                '</li>');
                        }

                    }

                    /**
                     * 페이징
                     */
                    var previousArrowStyle = '';
                    var nextArrowStyle = '';
                    var previousArrowClass = '';
                    var nextArrowClass = '';
                    // 첫페이지면 dim, 클릭불
                    if (commentData.pageNum === 1) {
                        previousArrowStyle = 'pointer-events: none'
                        previousArrowClass = 'off';
                    }
                    if (commentData.pageNum === commentData.pages) {
                        nextArrowStyle = 'pointer-events: none'
                        nextArrowClass = 'off';
                    }
                    $('.comment-list').append('<!-- .list-paging -->\n' +
                        '                <div class="list-paging">\n' +
                        '                        \n' +
                        '                    <a href="javascript:onClickPage(1)"\n' +
                        '                       style="' + previousArrowStyle + '"\n' +
                        '                       class="start ' + previousArrowClass + '">\n' +
                        '                        <span class="blind">처음</span>\n' +
                        '                    </a>\n' +
                        '                        \n' +
                        '                    <a href="javascript:onClickPage(\'' + ((parseInt(commentData.pageNum)) - 1) + '\')"\n' +
                        '                       style="' + previousArrowStyle + '"\n' +
                        '                       class="prev ' + previousArrowClass + '">\n' +
                        '                        <span class="blind">이전</span>\n' +
                        '                    </a>\n' +
                        '                    <ul id="pagination-container">\n' +
                        '                    </ul>\n' +
                        '                        \n' +
                        '                    <a href="javascript:onClickPage(\'' + ((parseInt(commentData.pageNum)) + 1) + '\')"\n' +
                        '                       style="' + nextArrowStyle + '"\n' +
                        '                       class="next ' + nextArrowClass + '">\n' +
                        '                        <span class="blind">다음</span>\n' +
                        '                    </a>\n' +
                        '                        \n' +
                        '                    <a\n' +
                        '                        \n' +
                        '                            href="javascript:onClickPage(\'' + commentData.pages + '\')"\n' +
                        '                       style="' + nextArrowStyle + '"\n' +
                        '                       class="end ' + nextArrowClass + '">\n' +
                        '                        <span class="blind">마지막</span>\n' +
                        '                    </a>\n' +
                        '                </div>\n' +
                        '                <!-- // .list-paging -->');

                    for (var k = 1; k < commentData.pages + 1; k++) {
                        var onClass = '';
                        if (commentData.pageNum === k) {
                            onClass = 'on'
                        }
                        $('#pagination-container').append('<li class="anchor ' + onClass + '"><a href="javascript:onClickPage(' + k + ')">' + k + '</a></li>\n');
                    }
                } else {
                    if ($('.inner .comment-empty').length === 0) {
                        $('#comment-parent-container').append("<li class=\"comment-item\"><div class=\"comment-box no-content\"><p class=\"comment-empty\">첫번째 댓글을 남겨주세요.</p></div></li>");
                    }

                }

                console.log('기사 댓글 조회 -> 성공');
                console.log(response);
            }).fail(function (err) {
                console.log('기사 댓글 조회 -> 에러');
            });
        }

        /**
         * 페이지 변경
         * @param pageNum
         */
        function onClickPage(pageNum) {
            getComments(selectedSort, pageNum);
        }

        /**
         * 새로고침 버튼 클릭
         */
        function onClickRefresh() {
            getComments(selectedSort, commentData.pageNum);
        }

        /**
         * 기사 댓글 Sort
         */
        function onClickSort(type) {
            // 좋아요 순 sort
            if (type === 'like') {
                if (selectedSort === 'likeCnt,desc') {
                    return;
                }
                selectedSort = 'likeCnt,desc';
                $('#sortLike').toggleClass('on');
                $('#sortRecent').toggleClass('on');
                getComments(selectedSort, '');
                // 최신 순 sort
            } else {
                if (selectedSort === 'createdDt,desc') {
                    return;
                }
                selectedSort = 'createdDt,desc';
                $('#sortLike').toggleClass('on');
                $('#sortRecent').toggleClass('on');
                getComments(selectedSort, '');
            }
        }

        /**
         * 해당 영역으로 스크롤
         * @param id
         */
        function scrollTo(id) {
            var offset = $('#comment' + id).offset();
            $('html, body').animate({scrollTop: offset.top - 200}, 400);
        }
    </script>
    <script src="/js/split/comment.js"></script>
    <!-- // .comment-area -->
<!-- dimmed -->
<div class="dimmed"></div>
<!-- //dimmed -->
<!-- popup-alert popup-login -->
<div class="popup-alert popup-login">
    <!-- side-area -->
    <div class="side-area">
        <h2>한국일보에<br>
            <strong>로그인</strong>하면 다양한<br>
            편의 기능을<br>
            제공 받을 수 있습니다.
        </h2>
        <ul>
            <li>
                <span class="graphic-01"></span>
                <span class="text">읽던 기사 이어보기</span>
            </li>
            <li>
                <span class="graphic-02"></span>
                <span class="text">댓글 반응 및 추천기사 제공</span>
            </li>
            <li>
                <span class="graphic-03"></span>
                <span class="text">연재 기사 정기 구독 기능</span>
            </li>
        </ul>
    </div>
    <!-- // side-area -->

    <!-- .content-area -->
    <div class="content-area">
        <!-- .popup-header -->
        <div class="popup-header">
            <div class="logo"></div>
            <a href="javascript:;" class="btn-close" onclick="$('.popup-alert').closePopup();"></a>
            <h2 class="tit">로그인</h2>
        </div>
        <!-- // .popup-header -->

        <!-- .cont -->
        <div class="cont">
            <!-- .login-sns -->
            <ul class="login-sns">
                <li class="naver" id="naver_id_login"></li>
                <li class="facebook" onclick="onClickFBLogin()">
                    <a href="javascript:;">
                        <span class="icon"></span>
                        <span class="text">페이스북 로그인</span>
                    </a>
                </li>
                <li class="kakao">
                    <a href="javascript:onClickKakaoLogin()">
                        <span class="icon"></span>
                        <span class="text">카카오 로그인</span>
                    </a>
                </li>
            </ul>
            <!-- // .login-sns -->

            <!-- form -->
            <!-- .login-input -->
            <ul class="login-input">
                <li>
                    <input id="loginId" type="text" placeholder="아이디">
                </li>
                <li>
                    <input id="loginPassword" type="password" placeholder="비밀번호" maxlength="16">
                    <p id="loginFailText" class="warn blind">아이디 또는 비밀번호를 잘못 입력했습니다.(연속 1회)</p>
                </li>
                <li class="secure-list" id="captchaArea" style="display: none">
                    <p class="guide type-image">아래 이미지를 보이는 대로 입력해주세요.</p>
                    <p class="guide type-sound" style="display: none;">스피커로 들리는 내용을 숫자로 입력해 주세요.</p>
                    <!-- .secure-num -->
                    <div class="secure-num type-image">
                        <!-- .img-box -->
                        <div class="img-box">
                            <img style="width: 100%; height: 100%;" id="imgCaptcha"></img>
                        </div>
                        <!-- // .img-box -->
                        <ul class="controller">
                            <li>
                                <a href="javascript:refreshCaptcha()">
                                    <span class="icon-refresh"></span>
                                    <span class="text">새로고침</span>
                                </a>
                            </li>
                            <li>
                                <a href="javascript:refreshCaptcha('sound')">
                                    <span class="icon-sound"></span>
                                    <span class="text">음성으로 듣기</span>
                                </a>
                            </li>
                        </ul>
                    </div>
                    <div class="secure-num type-sound" style="display: none">
                        <!-- .img-box -->
                        <div class="img-box">
                            <img style="width: 100%; height: 100%; background: url(https://static.nid.naver.com/images/web/user/sp_ico_captcha.gif) no-repeat;"></img>
                            <audio id="audioCaptcha" autoplay></audio>
                        </div>
                        <!-- // .img-box -->
                        <ul class="controller">
                            <li>
                                <a href="javascript:refreshCaptcha()">
                                    <span class="icon-refresh"></span>
                                    <span class="text">새로고침</span>
                                </a>
                            </li>
                            <li>
                                <a href="javascript:refreshCaptcha('image')">
                                    <span class="icon-sound"></span>
                                    <span class="text">이미지로 보기</span>
                                </a>
                            </li>
                        </ul>
                    </div>
                    <!-- // .secure-num -->
                    <!-- .input-word -->
                    <div class="input-word">
                        <input type="password" id="inputCaptcha" placeholder="자동입력 방지문자">
                    </div>
                    <!-- // .input-word -->
                </li>
                <li>
                    <button type="submit" class="btn-main" onclick="onClickSignIn()">로그인</button>
                    <div class="save-user">
                        <input type="checkbox" id="saveUser" name="saveUser" onchange>
                        <label for="saveUser">자동 로그인</label>
                    </div>
                </li>
            </ul>
            <!-- // .login-input -->
            <!-- // form -->
        </div>
        <!-- // .cont -->

        <!-- .popup-footer -->
        <div class="popup-footer">
            <!-- .go-enroll -->
            <div class="go-enroll">
                <a href="javascript:onClickSignUp()">
                    <span class="text">회원가입</span>
                    <span class="icon"></span>
                </a>
            </div>
            <!-- // .go-enroll -->

            <!-- .find-list -->
            <ul class="find-list">
                <li>
                    <a href="javascript:onClickFindId()">아이디 찾기</a>
                </li>
                <li>
                    <a href="javascript:onClickFindPassword()">비밀번호 찾기</a>
                </li>
            </ul>
            <!-- // .find-list -->
        </div>
        <!-- // .popup-footer -->
    </div>
    <!-- // .content-area -->
</div>
<!-- popup-alert popup-login -->

<!-- popup-alert no-account -->
<div id="sign-up-duplication-alert" class="popup-alert no-account">
    <h1 class="tit">
        중복 가입 요청
    </h1>
    <div class="cont">
        <p>
            이미 가입된 회원입니다.
        </p>
    </div>
    <div class="btn-area">
        <button class="btn-black font-medium" type="button" onclick="$('.no-account').closePopup(); openSignInPopUp();">
            확인
        </button>
    </div>
</div>
<!-- popup-alert no-account -->

<!-- popup-alert auto-login -->
<div class="popup-alert auto-login">
    <h1 class="tit">
        자동 로그인
    </h1>
    <div class="cont">
        <p>
            공공장소에서 사용하는 컴퓨터에서는 자동 로그인 기능 사용에 유의 바랍니다.
        </p>
    </div>
    <div class="btn-area">
        <button class="btn-gray font-medium" type="button" onclick="$('.auto-login').closePopup();">확인</button>
    </div>
</div>
<!-- popup-alert auto-login -->

<!-- popup-alert find-account -->
<div id="find-id-popup" class="popup-alert find-account">
    <!-- .popup-header -->
    <div class="popup-header">
        <a href="javascript:;" class="btn-close" onclick="$('.find-account').closePopup();"></a>
        <h2 class="tit">아이디 찾기</h2>
    </div>
    <!-- // .popup-header -->

    <!-- .cont -->
    <div class="cont">
        <!-- form -->
        <form>
            <ul class="find-type">
                <li>
                    <input id="findIdUserNameInput" type="text" placeholder="이름">
                </li>
                <li>
                    <button class="btn-main" onclick="onClickFindIdPhoneAuth()">휴대폰 인증</button>
                </li>
            </ul>
        </form>
        <!-- // form -->

        <div class="bottom-link">
            <a href="javascript:onClickFindPassword()">비밀번호를 잊으셨나요?</a>
        </div>
    </div>
    <!-- // .cont -->
</div>
<!-- popup-alert find-account -->

<!-- popup-alert find-result -->
<div id="find-id-result-popup" class="popup-alert find-result">
    <!-- .popup-header -->
    <div class="popup-header">
        <div class="logo"></div>
        <a href="javascript:;" class="btn-close" onclick="$('.find-result').closePopup();"></a>
        <h2 class="tit">아이디 찾기</h2>
    </div>
    <!-- // .popup-header -->

    <!-- .cont -->
    <div class="cont">
        <p id="find-id-guide-text" class="guide-text">손흥민/01012345678 으로 찾은 아이디 입니다.</p>
        <div class="result-box">
            <p id="find-id-id-text" class="user-id">user@hankookilbo.com</p>
            <!-- <p class="user-created">2019.11.05 가입</p> -->
        </div>
        <button class="btn-main" onclick="openSignInPopUp()">로그인</button>
    </div>
    <!-- // .cont -->
</div>
<!-- popup-alert find-result -->



<!-- 비밀번호 찾기 팝업 -->
<div id="find-password-popup" class="popup-alert find-account">
    <!-- .popup-header -->
    <div class="popup-header">
        <a href="javascript:;" class="btn-close" onclick="$('.find-account').closePopup();"></a>
        <h2 class="tit">비밀번호 찾기</h2>
    </div>
    <!-- // .popup-header -->

    <!-- .cont -->
    <div class="cont">
        <!-- form -->
        <input id="findPasswordUserIdInput" type="text" placeholder="아이디(아이디는 이메일입니다.)">
        <p class="ttl">인증방법 선택</p>
        <ul class="find-type">
            <li>
                <input type="radio" name="findType" id="findMail" class="find-mail" checked>
                <label for="findMail">등록된 이메일로 인증하기</label>
            </li>
            <li>
                <input type="radio" name="findType" id="findPhone" class="find-phone">
                <label for="findPhone">휴대폰으로 인증하기</label>
            </li>
            <li class="mail-field">
                <button id="findPasswordSendMailButton" class="btn-main" onclick="onClickFindPasswordSendMail()">인증메일 발송</button>
            </li>
            <li class="phone-field">
                <button class="btn-main" onclick="onClickFindPasswordPhoneAuth()">휴대폰 인증</button>
            </li>
        </ul>
        <!-- // form -->

        <div class="bottom-link">
            <a href="javascript:onClickFindId()">아이디를 잊으셨나요?</a>
        </div>
    </div>
    <!-- // .cont -->
</div>
<!-- popup-alert find-account -->

<!-- popup-alert no-account -->
<div id="find-id-no-account-popup" class="popup-alert no-account">
    <h1 class="tit">
        계정 정보 없음
    </h1>
    <div class="cont">
        <p>
            입력하신 사용자가 존재하지 않습니다.
        </p>
    </div>
    <div class="btn-area">
        <button class="btn-black" type="button" onclick="$('.no-account').closePopup();">확인</button>
    </div>
</div>
<!-- popup-alert no-account -->

<div id="find-password-send-mail-complete-popup" class="popup-alert send-mail">
    <h1 class="tit">
        인증메일 발송
    </h1>
    <div class="cont">
        <p>
            인증메일이 발송되었습니다. 해당 메일 계정 확인바랍니다. (유효시간:15분)
        </p>
    </div>
    <div class="btn-area">
        <button class="btn-gray" type="button" onclick="$('.send-mail').closePopup();">확인</button>
    </div>
</div>

<div id="find-password-request-id-popup" class="popup-alert request-id">
    <h1 class="tit">
        아이디 입력 요청
    </h1>
    <div class="cont">
        <p>
            비밀번호를 찾으실 아이디를
            <br>입력해주세요.
        </p>
    </div>
    <div class="btn-area">
        <button class="btn-gray" type="button" onclick="$('.request-id').closePopup();">확인</button>
    </div>
</div>

<!-- 비밀번호 재설정 팝업 -->
<div id="find-password-change-password-popup" class="popup-alert find-account">
    <!-- .popup-header -->
    <div class="popup-header">
        <a href="javascript:$('.find-account').closePopup();" class="btn-close"></a>
        <h2 class="tit">비밀번호 재설정</h2>
    </div>
    <!-- // .popup-header -->
    <!-- .cont -->
    <div class="cont">
        <!-- form -->
        <ul class="find-type">
            <li>
                <input id="findPasswordChangePasswordInput" type="password" placeholder="비밀번호 (8~16자 영문 대소문자,숫자,특수문자)"
                       maxlength="16">
            </li>
            <li>
                <input id="findPasswordChangePasswordConfirmInput" type="password" placeholder="비밀번호 확인" maxlength="16">
                <p id="findPasswordChangePasswordGuideText" class="guide-msg blind">비밀번호가 일치합니다.</p>
            </li>
            <li>
                <button class="btn-main" onclick="onSubmitFindPasswordChangePassword()">확인</button>
            </li>
        </ul>
        <!-- // form -->
    </div>
    <!-- // .cont -->
</div>
<!-- popup-alert find-account -->

<div id="find-password-change-password-complete-popup" class="popup-alert password-change">
    <h1 class="tit">
        회원 정보 수정
    </h1>
    <div class="cont">
        <p>
            비밀번호가 변경되었습니다.
        </p>
    </div>
    <div class="btn-area">
        <button class="btn-black font-medium" type="button" onclick="$('.popup-alert').closePopup(); openSignInPopUp()">확인</button>
    </div>
</div>

<div id="find-password-change-password-timeout-popup" class="popup-alert invalid-time">
    <h1 class="tit">
        재시도 요청
    </h1>
    <div class="cont">
        <p>
            유효 시간이 종료되었습니다.<br>
            다시 인증메일을 발송해주세요.
        </p>
    </div>
    <div class="btn-area">
        <button class="btn-gray" type="button" onclick="window.close()">확인</button>
    </div>
</div>

<!-- 로그인 5회 이상 실패 팝업 -->
<div id="sign-in-fail-five-time-popup" class="popup-alert fail-login">
    <h1 class="tit">
        로그인 5회 연속 실패
    </h1>
    <div class="cont">
        <p>
            보안을 위해 비밀번호와 자동입력 방지문자를 함께 입력 바랍니다.
        </p>
    </div>
    <div class="btn-area">
        <button class="btn-black" type="button" onclick="$('.fail-login').closePopup();">네</button>
    </div>
</div>
<!-- 로그인 5회 이상 실패 팝업 -->

<!-- popup-alert find-account -->
<div class="popup-alert find-account" id="findIdPopup">
    <!-- .popup-header -->
    <div class="popup-header">
        <a href="javascript:;" class="btn-close" onclick="$('.find-account').closePopup();"></a>
        <h2 class="tit">아이디 찾기</h2>
    </div>
    <!-- // .popup-header -->

    <!-- .cont -->
    <div class="cont">
        <!-- form -->
        <form>
            <ul class="find-type">
                <li>
                    <input type="text" placeholder="이름">
                </li>
                <li>
                    <button class="btn-main">휴대폰 인증</button>
                </li>
            </ul>
        </form>
        <!-- // form -->

        <div class="bottom-link">
            <a href="javascript:;" onclick="onClickFindPassword()">비밀번호를 잊으셨나요?</a>
        </div>
    </div>
    <!-- // .cont -->
</div>
<!-- popup-alert find-account -->
<script>
    var signUpType = 'None';
    var snsUserSignUpDto = {
        id: '',
        email: '',
        sex: '',
        birthDay: '',
        name: ''
    };
    var niceVeryfiyInfo = {};
    var autoLoginFlag;
    var captchaEnabled = false;
    var authType;

    // 아이디 찾기
    var findIdUserId;

    // 비밀번호 찾기
    var findPasswordChangePasswordGuideText = $('#findPasswordChangePasswordGuideText');
    var isValidFindPasswordChangePassword = false;
    var findPasswordUserId;
    var findPasswordPassword;
    var findPasswordPasswordConfirm;
    var sendEmailTimeRemain = 900;

    // 자동로그인 눌렀을 때 리스너
    $("#saveUser").on("ifChanged", function () {
        setTimeout(function () {
            autoLoginFlag = $('input:checkbox[id="saveUser"]').is(":checked");
            console.log(autoLoginFlag);
            if (autoLoginFlag) {
                $('.popup-alert.auto-login').openPopup();
            }
        }, 100);
    });

    if(Cookies.get('auth_key') != null) {
        $('#find-password-change-password-popup').openPopup();
    }

    /**
     * 아이디 찾기 본인인증 요청 함수
     */
    function onClickFindIdPhoneAuth() {
        findIdUserId = $('#findIdUserNameInput').val();
        if (findIdUserId !== undefined && findIdUserId.length !== 0) {
            $.ajax({
                type: "GET",
                url: '/users/exist?memName=' + findIdUserId
            }).success(function (response) {
                console.log(response);
                // 사용자가 있으면
                var flag = response;
                if (flag) {
                    authType = 'idfind';
                    $('#find-id-popup').closePopup();
                    $('#findIdUserNameInput').val('');
                    openCpPopup();
                    // 사용자가 없으면
                } else {
                    $('#find-id-no-account-popup').openPopup();
                }
            }).fail(function (response) {
                console.log('아이디 찾기 에러')
            });

        } else {
            // 아이디 입력 요청 팝업을 띄운다.
            $('#find-password-request-id-popup').openPopup();
        }
    }

    /**
     * 비밀번호 찾기 본인인증 요청
     */
    function onClickFindPasswordPhoneAuth() {
        findPasswordUserId = $('#findPasswordUserIdInput').val();
        if (findPasswordUserId !== undefined && findPasswordUserId.length !== 0) {
            $.ajax({
                type: "GET",
                url: '/users/exist?memId=' + findPasswordUserId
            }).success(function (response) {
                console.log(response);
                // 사용자가 있으면
                var flag = response;
                if (flag) {
                    authType = 'pwfind';
                    $('#find-password-popup').closePopup();
                    openCpPopup();
                    // 사용자가 없으면
                } else {
                    $('#find-id-no-account-popup').openPopup();
                }
            }).fail(function (response) {
                console.log('아이디 찾기 에러')
            });
        } else {
            // 아이디 입력 요청 팝업을 띄운다.
            $('#find-password-request-id-popup').openPopup();
        }
    }

    /**
     * 비밀번호 찾기 본인 인증 후 비밀번호 수정 버튼 클릭
     */
    function onSubmitFindPasswordChangePassword() {
        if (isValidFindPasswordChangePassword) {
            var password = $("#findPasswordChangePasswordInput").val();
            $.ajax({
                type: "PATCH",
                url: '/users/me/password',
                contentType: 'application/json',
                data: JSON.stringify({
                    memId: findPasswordUserId,
                    password: password,
                    authKey: Cookies.get('auth_key')
                })
            }).success(function (response) {
                console.log(response);

                var flag = response;
                // 성공
                if (flag === "true") {
                    Cookies.remove('auth_key')
                    $('#find-password-change-password-popup').closePopup();
                    $('#find-password-change-password-complete-popup').openPopup();
                    // 실패
                } else if (flag === "false") {
                    alert('시간초과');
                    Cookies.remove('auth_key')
                } else if (flag === "error") {
                    $('#find-password-change-password-timeout-popup').openPopup();
                    Cookies.remove('auth_key')
                }
            }).fail(function (response) {
                $('#find-password-change-password-popup').closePopup();
                alert('에러 발생 - 인증요청을 다시 진행해주세요.');
                Cookies.remove('auth_key')
                window.close();

            });
        }
    }

    /**
     * 비밀번호 찾기 이메일 인증 보내기
     */
    function onClickFindPasswordSendMail() {
        findPasswordUserId = $('#findPasswordUserIdInput').val();
        if (findPasswordUserId !== undefined && findPasswordUserId.length !== 0) {
            /**
             * 해당 계정이 존재하는지 확인
             */
            $.ajax({
                type: "GET",
                url: '/users/exist?memId=' + findPasswordUserId
            }).success(function (response) {
                console.log(response);
                var flag = response;
                // 사용자가 있으면
                if (flag) {
                    /**
                     * 계정이 존재하면 인증메일을 발송한다.
                     */
                    $.ajax({
                        type: "POST",
                        url: '/auth/password/send-email',
                        contentType: 'application/json',
                        data: JSON.stringify({
                            authTool: 'Email',
                            authDiv: 'pwfind',
                            reqEmail: findPasswordUserId
                        })
                    }).success(function (response) {
                        console.log(response);
                        var flag = response;
                        if (flag) {
                            $('#find-password-send-mail-complete-popup').openPopup();
                            sendEmailTimeRemain = 900;
                            var minute;
                            var second;

                            var timer = setInterval(function() {
                                if (sendEmailTimeRemain == 0) {
                                    clearInterval(timer);
                                }
                                minute = parseInt(sendEmailTimeRemain / 60, 10);
                                second = sendEmailTimeRemain - minute * 60;

                                sendEmailTimeRemain--;
                                $('#findPasswordSendMailButton').html('인증메일 재발송( ' + ("00" + minute.toString()).slice(-2) + ':' + ("00" + second.toString()).slice(-2)  + ' )')
                            }, 1000);

                        } else {

                        }
                    }).fail(function (response) {
                        console.log('아이디 찾기 에러')
                    });
                    // 사용자가 없으면
                } else {
                    $('#find-id-no-account-popup').openPopup();
                }
            }).fail(function (response) {
                console.log('아이디 찾기 에러')
            });
        } else {
            // 아이디 입력 요청 팝업을 띄운다.
            $('#find-password-request-id-popup').openPopup();
        }
    }

    $("#findPasswordChangePasswordInput").on('keyup', function (input) {
        // comment = value;
        findPasswordPassword = input.target.value;
        // 비밀번호 정규식이 일치하지 않으면
        if (!passwordRegex.test(findPasswordPassword) && !passwordRegex2.test(findPasswordPassword)) {
            findPasswordChangePasswordGuideText.text('8~16자 영문 대소문자, 숫자 및 특수문자를 사용해주세요');
            findPasswordChangePasswordGuideText.removeClass('blind').addClass('warn');
            isValidFindPasswordChangePassword = false;
            // 비밀번호가 일치하지 않으면
        } else if (findPasswordPassword !== findPasswordPasswordConfirm) {
            findPasswordChangePasswordGuideText.text('비밀번호가 일치하지 않습니다.');
            findPasswordChangePasswordGuideText.removeClass('blind').addClass('warn');
            isValidFindPasswordChangePassword = false;
            // 비밀번호가 일치하면
        } else {
            findPasswordChangePasswordGuideText.text('비밀번호가 일치합니다.');
            findPasswordChangePasswordGuideText.removeClass('blind warn');
            isValidFindPasswordChangePassword = true;
        }
        // your code here
    });

    $("#findPasswordChangePasswordConfirmInput").on('keyup', function (input) {
        findPasswordPasswordConfirm = input.target.value;

        // 비밀번호 정규식이 일치하지 않으면
        if (!passwordRegex.test(findPasswordPasswordConfirm) && !passwordRegex2.test(findPasswordPasswordConfirm)) {
            findPasswordChangePasswordGuideText.text('8~16자 영문 대소문자, 숫자 및 특수문자를 사용해주세요');
            findPasswordChangePasswordGuideText.removeClass('blind').addClass('warn');
            isValidFindPasswordChangePassword = false;
            // 비밀번호가 일치하지 않으면
        } else if (findPasswordPassword !== findPasswordPasswordConfirm) {
            findPasswordChangePasswordGuideText.text('비밀번호가 일치하지 않습니다.');
            findPasswordChangePasswordGuideText.removeClass('blind').addClass('warn');
            isValidFindPasswordChangePassword = false;
            // 비밀번호가 일치하면
        } else {
            findPasswordChangePasswordGuideText.text('비밀번호가 일치합니다.');
            findPasswordChangePasswordGuideText.removeClass('blind warn');
            isValidFindPasswordChangePassword = true;
        }
    });

    /**
     * 로그인
     */
    function onClickSignIn() {
        if (captchaEnabled) {
            if ($('#inputCaptcha').val() === '') alert('캡차를 입력해주세요.')
        }
        $.ajax({
            url: '/auth/sign-in',
            type: 'POST',
            data: JSON.stringify({
                userId: $('#loginId').val(),
                password: $('#loginPassword').val(),
                captchaType: captchaType,
                captchaKey: captchaKey,
                captchaValue: $('#inputCaptcha').val()
            }),
            contentType: 'application/json',
            timeout: 30000,
            success: function (data) {
                // 로그인 실패했을 경우
                if (data.loginFailCount) {
                    console.log('fail');
                    $('#loginFailText').text("아이디 또는 비밀번호를 잘못입력했습니다.(연속 " + data.loginFailCount + "회)");
                    $('#loginFailText').removeClass('blind');
                    if (data.loginFailCount >= 5) {
                        $('#sign-in-fail-five-time-popup').openPopup();
                        // 로그인 5회 이상 실패하면 캡차를 보여준다.
                        captchaEnabled = true;
                        refreshCaptcha();
                        return;
                    }
                    // 로그인 성공했을 경우
                } else {
                    console.log(data);
                    if (data === 'not found user') {
                        alert('존재하지 않는 회원입니다.');
                        return;
                    }
                    // 자동로그인 체크시
                    if (autoLoginFlag) {
                        console.log('success');
                        // cookie에 토큰 저장
                        if (data.access_token != undefined) {
                            Cookies.set('accessToken', data.access_token, { path: '/', expires: 1 });
                            Cookies.set('user_id', $('#loginId').val(), { path: '/', expires: 1 });
                            // getUserMe(true);
                        } else {
                            return;
                        }
                    } else {
                        // cookie에 토큰 저장
                        if (data.access_token != undefined) {
                            Cookies.set('accessToken', data.access_token, { path: '/' });
                            Cookies.set('user_id', $('#loginId').val(), { path: '/' });

                            // getUserMe(false);
                        }
                    }

                    // 로그인 실패 label을 blind 처리
                    $('#loginFailText').addClass('blind');
                    signUpType = 'None';
                    $('#loginId').val('');
                    $('#loginPassword').val('');
                    $('#inputCaptcha').val();
                    location.reload();
                }
            },
            error: function (req, stat, err) {
                console.log(err);
                console.log('로그인 실패');
            }
        }); // ajax
    }

    var captchaKey;
    var captchaType = 'image';

    function refreshCaptcha(type) {
        if (type !== undefined && type !== null) {
            captchaType = type;
            if (type == 'image') {
                $('#captchaArea .type-image').show();
                $('#captchaArea .type-sound').hide();
            } else {
                $('#captchaArea .type-sound').show();
                $('#captchaArea .type-image').hide();
            }
        }

        $.ajax({
            url: '/auth/captcha/refresh?type=' + captchaType,
            type: 'GET',
            contentType: 'application/json',
            timeout: 30000,
            success: function (data) {

                console.log(data);
                // captcha
                $('#captchaArea').show();
                if (captchaType == 'image') {
                    $('#imgCaptcha').attr('src', data.image);
                } else {
                    $('#audioCaptcha').attr('src', data.sound);
                }

                captchaKey = data.key;
            },
            error: function (req, stat, err) {
                console.log(err);
            }
        }); // ajax
    }

    function onClickSignUp() {
        authType = 'enroll';
        openCpPopup();
    }
</script>
<script>

    // 여기서 authController에서 authSErvice에서 정보 받아오기
    function setSnsSignInInfo(type, token, userId) {

        signUpType = type;

        // sns 정보를 받아오는 ajax
        $.ajax({
            url: '/auth/sns-info',
            method: "POST",
            contentType: 'application/json',
            data: JSON.stringify({
                type: type,
                token: token,
                userId: userId
            })
        }).success(function (response) {
                // Do something
                console.log("SNS 회원가입 -> SNS 정보받아오기");
                var snsUserInfo = response;
                console.log(snsUserInfo);

                if (type === "Kakao") {
                    snsUserSignUpDto.id = snsUserInfo.id;
                    snsUserSignUpDto.email = snsUserInfo.kakao_account.email;
                    checkExistUser();
                } else if (type === "Naver") {
                    console.log(snsUserInfo);
                    snsUserSignUpDto.id = snsUserInfo.response.id;
                    snsUserSignUpDto.email = snsUserInfo.response.email;
                    snsUserSignUpDto.sex = snsUserInfo.response.gender;
                    snsUserSignUpDto.name = snsUserInfo.response.name;
                    checkExistUser();
                } else if (type === "Facebook") {
                    snsUserSignUpDto.id = snsUserInfo.id;
                    if (snsUserInfo.gender !== undefined) {
                        if (snsUserInfo.gender === 'male') {
                            snsUserSignUpDto.sex = "Male";
                        } else {
                            snsUserSignUpDto.sex = "Female";
                        }
                    }
                    if (snsUserInfo.birthday !== undefined) {
                        var birthdayList = snsUserInfo.birthday.split('/');
                        var birthday = birthdayList [2] + birthdayList[0] + birthdayList[1];
                        snsUserSignUpDto.birthDay = birthday;
                    }
                    checkExistUser();
                    console.log(snsUserSignUpDto);
                } else {
                    alert('sns 회원가입 error');
                }

            })
            .fail(function (error) {
                console.log("SNS 회원가입 에러 -> SNS 정보받아오기");
                console.log(JSON.parse(error.responseText));
                alert('sns 회원가입 error');
                $('.popup-alert').closePopup();
            });
    }

    /**
     * sns일 경우 중복 확인
     */
    function checkExistUser() {
        $.ajax({
            type: "GET",
            url: '/users/exist?memId=' + snsUserSignUpDto.id + '&isSns=Y',
        }).success(function (response) {
            console.log('본인 인증 회원가입 -> 이메일 중복 확인');
            console.log(JSON.parse(response));
            console.log(snsUserSignUpDto);
            var flag = JSON.parse(response);

            // 아이디 중복 아닐시
            if (!flag) {
                $('.popup-alert').closePopup();
                $('.popup-medium.join-form.agree').openPopup();
                // 아이디 중복시
            } else {
                $.ajax({
                    url: '/auth/sign-in/sns',
                    type: 'POST',
                    data: JSON.stringify({
                        userId: snsUserSignUpDto.id,
                        password: snsUserSignUpDto.id + "@" + signUpType
                    }),
                    contentType: 'application/json',
                    timeout: 30000,
                    success: function (data) {
                        // 로그인 성공했을 경우
                        console.log('SNS 로그인 -> 성공');
                        console.log(data);
                        if (autoLoginFlag) {
                            if (data.access_token !== undefined) {
                                Cookies.set('accessToken', data.access_token, { path: '/', expires: 99999 });
                                Cookies.set('user_id', snsUserSignUpDto.id, { path: '/', expires: 99999 });
                            } else {
                                alert('로그인 에러');
                                return;
                            }
                        } else {
                            if (data.access_token !== undefined) {
                                Cookies.set('accessToken', data.access_token, { path: '/' });
                                Cookies.set('user_id', snsUserSignUpDto.id, { path: '/' });
                            } else {
                                alert('로그인 에러');
                                return;
                            }
                        }
                        location.reload();

                    },
                    error: function (req, stat, err) {
                        console.log('SNS 로그인 -> 에러');
                        console.log(err);
                    }
                }); // ajax
                // get user me
            }
        }).fail(function (error) {
            console.log('SNS 회원가입 -> 아이디 존재 체크 에러');
            console.log(JSON.parse(error.responseText));
        });
    }
    //
    // function getUserMe(autoLogin) {
    //     $.ajax({
    //         url: '/users/me',
    //         type: 'GET',
    //         contentType: 'application/json',
    //         timeout: 30000,
    //         success: function (data) {
    //             if (autoLogin) {
    //                 Cookies.set('user_id', data.memId, { path: '/', expires: 1 });
    //             } else {
    //                 Cookies.set('user_id', data.memId, { path: '/' });
    //             }
    //             console.log(data);
    //         },
    //         error: function (req, stat, err) {
    //             console.log(err);
    //         }
    //     }); // ajax
    // }

    // 로그인 팝업을 여는 함수
    function openSignInPopUp() {
        $('.popup-login').openPopup();
    }

    // 아이디 찾기 팝업을 여는 함수
    function onClickFindId() {
        $('.popup-login').closePopup();
        $('.popup-alert').closePopup();
        $('#find-id-popup').openPopup();
    }

    // 비밀번호 찾기 팝업을 여는 함수
    function onClickFindPassword() {
        $('.popup-login').closePopup();
        $('#find-id-popup').closePopup();
        $('#find-password-popup').openPopup();
    }

    /**
     * 엔터 클릭시
     */
    $('#loginId').keydown(function (key) {
        //키가 13이면 실행 (엔터는 13)
        if (key.keyCode == 13){
            onClickSignIn();
        }
    });

    /**
     * 엔터 클릭시
     */
    $('#loginPassword').keydown(function (key) {
        //키가 13이면 실행 (엔터는 13)
        if (key.keyCode == 13){
            onClickSignIn();
        }
    });



    </script>
<script src="//developers.kakao.com/sdk/js/kakao.min.js"></script>
<script type='text/javascript'>
    //<![CDATA[
    // 사용할 앱의 JavaScript 키를 설정해 주세요.
    Kakao.init('e62df5186f0758def8f14c53e64d7b9d');

    function onClickKakaoLogin() {
        // 로그인 창을 띄웁니다.
        Kakao.Auth.login({
            success: function (response) {
                console.log("카카오 로그인");
                console.log(response);
                console.log(response.access_token);
                setSnsSignInInfo('Kakao', response.access_token, "");
            },
            fail: function (err) {
                alert(JSON.stringify(err));
            }
        });
    };
    //]]>
</script>

<script type="text/javascript" src="/js/lib/naverlogin_implicit_1.0.3.js" charset="utf-8"></script>
<script type="text/javascript">
    console.log('https://www.hankookilbo.com');

    var naver_id_login = new naver_id_login('Xdv40OqMAaGyFqokdQFs', 'https://www.hankookilbo.com/auth/naver');

    var state = naver_id_login.getUniqState();
    var naverEmail = '';

    naver_id_login.setButton("white", 10, 40);
    naver_id_login.setDomain('https://www.hankookilbo.com');
    naver_id_login.setState(state);
    naver_id_login.setPopup();
    naver_id_login.init_naver_id_login();
</script>

<script async defer crossorigin="anonymous"
        src="https://connect.facebook.net/en_US/sdk.js#xfbml=1&version=v6.0&appId=1241983985912870&autoLogAppEvents=1"></script>
<script>
    function onClickFBLogin() {
        FB.login(function (response) {
            console.log("페이스북 로그인");
            console.log(response.authResponse.accessToken);
            setSnsSignInInfo("Facebook", response.authResponse.accessToken, response.authResponse.userID);
        });
    }
</script>
<script src="/js/split/findAccountForm.js"></script>
<!-- dimmed -->
<div class="dimmed"></div>
<!-- //dimmed -->

<!-- popup-alert join-form -->
<div class="popup-alert popup-medium join-form agree">
    <!-- .popup-header -->
    <div class="popup-header">
        <div class="logo"></div>
        <a href="javascript:;" class="btn-close" onclick="$('.agree').closePopup();"></a>
        <h2 class="tit">약관동의</h2>
    </div>
    <!-- // .popup-header -->

    <!-- .cont -->
    <div class="cont">
        <form>
            <!-- .rowner .total-field -->
            <div class="rowner total-field">
                <input type="checkbox" name="totalAgree" id="totalAgree" class="total-agree">
                <label for="totalAgree">전체동의 <span class="optional">(선택포함)</span></label>
            </div>
            <!-- // .rowner .total-field -->
            <!-- .rowner -->
            <div class="rowner access-term">
                <div class="agree-input">
                    <input type="checkbox" id="accessTerm" class="partial-switch required">
                    <label for="accessTerm">한국일보 이용약관 <span class="required">(필수)</span></label>
                </div>
                <p class="contents">제 1 조 (목적)
이 이용약관 (이하 ‘약관’이라 합니다)은 ㈜한국일보사 (이하 ‘회사’라 합니다)가 제공하는 한국일보닷컴(hankookilbo.com) 관련 제반 서비스의 이용과 관련하여 회사와 회원 간 권리와 의무 및 책임, 기타 필요한 사항을 규정함을 목적으로 합니다.

제 2 조 (용어의 정의)
1. 이 약관에서 사용하는 용어의 정의는 다음과 같습니다.
① ‘회원’ 이라 함은 이 약관에 동의하고 이용자 아이디(ID)와 비밀번호를 부여 받아 이 회사가 제공하는 서비스를 이용하는 이용자를 말합니다.
② ‘이용계약’ 이라 함은 이 약관을 포함하여 서비스 이용과 관련하여 회사와 회원간에 체결하는 모든 계약을 말합니다.
③ ‘가입’ 이라 함은 회원이 되고자 하는 이용자가 이 약관에 동의하고 회사의 서비스 신청 양식에 필요 정보를 기입하고, 서비스 이용 계약을 신청, 회사의 승인을 얻는 것을 말합니다.
④ ‘탈퇴’라 함은 회원이 이용계약을 해약하는 것을 말합니다.
⑤ ‘이용자 아이디(ID)’라 함은 회원의 식별 및 서비스 이용을 위하여 회원이 정하고 회사가 승인한 문자와 숫자의 조합을 말합니다.
⑥ ‘비밀번호’라 함은 이용자 아이디(ID)로 식별되는 회원의 본인 여부를 검증하기 위하여 회원 자신이 정하여 등록한 문자와 숫자의 조합을 말합니다.
⑦ ‘단말기’라 함은 서비스에 접속하기 위해 회원이 이용하는 개인용 컴퓨터, PDA, 휴대전화, IPTV 등의 전산장치를 말합니다.
⑧ ‘게시물’ 이라 함은 회원이 서비스 이용을 하면서 게시한 글, 사진, 동영상 및 각종 파일과 링크 등을 말합니다.
2. 이 약관에서 사용하는 용어 중 제1항에서 정하지 아니한 것은 관계 법령 및 서비스별 안내에서 정하는 바에 따르며, 그 외에는 일반 관례에 따릅니다.

제 3 조 (약관의 게시 및 개정)
1. 회사는 이 약관을 회원들이 쉽게 알 수 있도록 한국일보닷컴 초기화면에 게시합니다.
2. 회사는 ‘약관의규제에관한법률’ ‘정보통신망이용촉진및정보보호등에관한법률(이하 ‘정보통신망법’) 등 관련 법을 위배하지 않는 범위 안에서 이용 약관을 개정할 수 있습니다.
3. 회사가 약관을 개정할 경우에는 적용일자 및 개정사유를 명시하여 현행약관과 함께 제1항의 방식에 따라 개정약관의 적용일자 30일 전부터 적용일자 전일까지 공지합니다. 다만 회원에게 불리한 개정의 경우에는 공지 외에도 전자우편, 전자쪽지, 로그인 시 동의 창 등 전자적 수단을 통해 따로 통지합니다.
4. 회원이 약관 개정에 동의하지 않을 경우 당 회원과 이용계약을 해지할 수 있습니다.
5. 회원이 개정된 약관의 효력이 발생한지 15일 후에도 거부 의사를 표명하지 않은 채 계속 서비스를 이용할 경우 개정된 약관에 동의한 것으로 간주합니다.

제 4 조 (약관 외 준칙)
1. 회사는 필요한 경우 서비스별로 개별약관 또는 운영원칙을 둘 수 있으며, 이 약관과 운영원칙의 내용이 상충되는 경우에는 서비스별 개별약관과 운영원칙을 우선하여 적용합니다.
2. 이 약관에 명시되어 있지 않은 사항은 관련 법령 또는 상관례에 따릅니다.

제 5 조 (이용계약의 성립)
1. 이용계약은 회원이 되고자 하는 자(이하 ‘가입신청자)가 약관 내용에 ‘동의’를 한 후 회원가입 신청을 하고 회사가 이러한 신청을 승낙함으로써 체결됩니다.
2. 회사는 가입신청자의 신청에 대해 서비스 이용을 승낙함을 원칙으로 합니다. 다만 회사는 다음 각 호에 해당하는 신청에 대하여는 승낙을 하지 않거나 사후에 이용계약을 해지할 수 있습니다.
① 가입신청자가 이 약관에 의하여 이전에 회원자격을 상실한 적이 있는 경우. 다만 ‘회사’의 재가입 승낙을 얻은 경우는 예외로 함
② 타인의 명의, 이메일 주소, 휴대전화 번호 등 개인정보를 도용하여 가입한 경우
③ 허위 정보를 기재하거나 회사가 필수적으로 요구하는 사항을 기재하지 않은 경우
④ 이용자 귀책사유로 인하여 승인이 불가능하거나 기타 규정한 제반 사항을 위반하며 신청하는 경우
⑤ 관계법령에 위배되거나 사회의 안녕질서 혹은 미풍양속을 저해할 수 있는 목적으로 신청한 경우
⑥ 영리목적 기타 부정한 용도로 본 서비스를 이용하고자 하는 경우
3. 회사는 제2항에 따라 회원가입신청의 승낙을 하지 않거나 유보한 경우 이를 가입신청자에게 알려야 합니다.
4. 회사는 서비스 이용신청이 다음 각 호에 해당하는 경우에는 그 신청에 대하여 승낙 제한사유가 해소될 때까지 승낙을 유보할 수 있습니다.
① 회사의 서비스 관련 설비의 여유가 없는 경우
② 회사의 기술상 또는 업무상 문제가 있는 경우
③ 기타 이용승낙이 곤란한 경우
5. 회사는 이용신청 고객이 관계법령에서 규정하는 미성년자일 경우에 서비스별 안내에서 정하는 바에 따라 승낙을 보류할 수 있습니다.
6. 회사는 회원을 대상으로 서비스별, 이용시간, 이용횟수 등을 통해 등급을 구분하여 이용에 차등을 둘 수 있습니다.

제 6 조 (개인정보 보호 의무 및 사용)
1. 회사는 ‘정보통신망법’ 등 관계 법령이 정하는 바에 따라 회원의 개인정보를 보호하기 위해 최선을 다합니다. 개인정보의 보호와 사용에 대해서는 관련 법령 및 회사의 개인정보취급방침이 적용됩니다. 다만 회사의 공식사이트 이외의 링크된 사이트에서는 회사의 개인정보취급방침이 적용되지 않습니다.
2. 회원은 이용자 아이디(ID) 및 비밀번호 등 개인정보가 타인에게 노출되지 않도록 철저히 관리해야 하며, 회사는 회원의 귀책사유로 인해 노출된 정보에 대해서는 책임을 지지 않습니다.
3. 회원은 아이디 및 비밀번호가 도용되거나 제3자가 사용하고 있음을 인지한 경우 이를 즉시 회사에 통지하고 회사의 안내에 따라야 합니다.
4. 회사는 다음과 같은 경우에 법이 허용하는 범위 내에서 회원의 개인정보를 제3자에게 제공할 수 있습니다.
① 수사기관이나 기타 정부기관으로부터 적법한 절차에 따라 정보제공을 요청 받은 경우
② 회원의 법령 또는 약관의 위반을 포함하여 부정행위 확인 등의 정보보호 업무를 위해 필요한 경우
③ 기타 법률에 의해 요구되는 경우
5. 회사는 회원에게 보다 다양한 정보 서비스 및 관련 혜택을 제공할 목적으로 회원의 정보를 이용할 수 있습니다. 또한, 회사는 회원정보를 제휴사에게 제공할 경우 제휴사, 목적, 이용될 회원정보 내용 등을 사전에 공지하고 회원 동의를 받아야 합니다.
6. 회사가 타사와 합병, 분할 시 회원의 정보는 공유될 수 있습니다.
7. 회사는 서비스 제공시 회원의 단말기로 쿠키를 전송할 수 있습니다. 이 경우 회원은 사용하는 단말기의 브라우저가 쿠키의 수신을 거부하거나 쿠키의 수신에 대하여 경고하도록 설정을 변경할 수 있습니다.
8. 회원이 이용신청서에 회원정보를 기재하고 본 약관에 동의 이용신청을 하는 것은 기재된 회원정보를 수집, 이용 및 제공하는 것에 동의하는 것으로 간주합니다.
9. 회사는 관련 법령과 이용 약관, 개인정보보호방침이 정하는 한계 내에서 회원 전체 또는 일부 정보를 업무와 관련된 통계자료로 사용할 수 있습니다.

제 7 조 (회사의 의무)
1. 회사는 관련법과 이 약관이 금지하거나 미풍양속에 반하는 행위를 하지 않으며, 계속적이고 안정적으로 서비스를 제공하기 위하여 최선을 다하여 노력합니다.
2. 회사는 회원이 안전하게 서비스를 이용할 수 있도록 개인정보 보호를 위해 보안시스템을 갖추어야 하며 개인정보취급방침을 공시하고 준수합니다.
3. 회사는 서비스 이용과 관련하여 발생하는 이용자의 불만 또는 피해 구제 요청을 적절하게 처리할 수 있도록 필요한 인력 및 시스템을 구비합니다.
4. 회사는 서비스 이용과 관련하여 회원으로부터 제기된 의견이나 불만이 정당하다고 인정할 경우에는 이를 처리하여야 합니다.

제 8 조 (회원의 의무)
1. 회원은 다음 행위를 하여서는 안 됩니다.
① 신청 또는 변경 시 허위 내용의 등록
② 타인의 정보 도용
③ 회사가 게시한 정보의 변경
④ 회사가 정한 정보 이외의 정보(컴퓨터 프로그램 등)를 송신 또는 게시
⑤ 회사와 기타 제 3자의 저작권 등 지적재산권에 대한 침해
⑥ 회사 및 기타 제3자의 명예를 손상시키거나 업무를 방해하는 행위
⑦ 외설 또는 폭력적인 메시지, 화상, 음성 등의 정보를 서비스에 공개 또는 게시하는 행위
⑧ 회사의 동의 없이 영리를 목적으로 서비스를 사용하는 행위
⑨ 기타 불법적이거나 부당한 행위
2. 회원은 관계 법령과 이 약관의 규정, 회사가 통지하는 사항 등을 준수하여야 하며, 기타 회사의 업무에 방해되는 행위를 해서는 안 됩니다.
3. 회원은 이용 신청시 기재한 주소, 연락처, 전자우편주소 등 개인정보와 이용계약 사항의 변경이 있을 경우 즉시 수정하여야 하며, 미변경으로 인해 발생하는 문제에 대해서 회사는 책임지지 않습니다.
4. 회원은 회사의 명시적 동의가 없는 한 서비스를 이용한 영업활동을 할 수 없으며, 그 영업활동의 결과에 대해 회사는 책임을 지지 않습니다. 또한 회원은 이와 같이 영업활동으로 회사가 손해를 입은 경우 회원은 회사에 대해 손해배상 의무를 지며, 회사는 해당 회원에 대해 서비스 이용제한 및 적절한 절차를 거쳐 손해배상 등을 청구할 수 있습니다.

제 9 조 (이용자 아이디 부여 및 변경)
1. 회사는 회원에 대하여 약관에 정하는 바에 따라 이용자 아이디(ID)를 부여합니다.
2. 이용자 아이디(ID)는 원칙적으로 변경이 불가하며 부득이한 사유로 인하여 변경하고자 하는 경우에는 해당 아이디(ID)를 해지하고 재가입 해야 합니다.
3. 이용자 아이디(ID)는 회원 본인의 동의 하에 회사 또는 자회사, 제휴사에서 운영하는 사이트의 회원 아이디(ID)와 연결될 수 있습니다.
4. 이용자 아이디(ID)는 다음 각호에 해당하는 경우에는 회원의 요청 또는 회사의 직권으로 변경 또는 이용을 정지할 수 있습니다.
① 이용자 아이디(ID)가 전화번호 또는 주민등록번호로 등록되어 사생활 침해가 우려되는 경우
② 타인에게 혐오감을 주거나 미풍양속에 어긋나는 경우
③ 회사, 회사의 서비스 또는 서비스 운영자 등의 명칭과 동일하거나 오인 등의 우려가 있는 경우
④ 기타 합리적인 사유가 있는 경우
5. 이용자 아이디(ID) 및 비밀번호 관리책임은 회원에게 있습니다. 이를 소홀히 관리하여 발생하는 서비스 이용상의 손해 또는 제3자에 의한 부정이용 등에 대한 책임은 회원에게 있으며 회사는 그에 대한 책임을 지지 않습니다.
6. 이용자 아이디(ID) 및 비밀번호를 도난 당하거나 제3자가 사용하고 있음을 인지한 경우에는 바로 회사에 통보하고 안내에 있는 경우에는 그에 따라야 하며, 이러한 통지를 하지 아니하거나 회사의 조치에 응하지 아니하여 발생한 모든 불이익에 대한 책임은 회원에게 있습니다.
7. 기타회원 개인정보 관리 및 변경 등에 관한 사항은 서비스별 안내에 정하는 바에 의합니다.

제 10 조 (서비스 이용)
1. 서비스는 회사의 업무상 또는 기술상 특별한 지장이 없는 한 연중무휴, 1일 24시간 운영을 원칙으로 합니다. 단 천재지변 및 비상사태를 비롯한 부득이한 상황이 발생한 경우에는 서비스를 일시 중단할 수 있습니다.
2. 회사는 컴퓨터 등 정보통신설비의 보수점검, 교체 및 고장, 통신두절 또는 운영상 상당한 이유가 있는 경우 서비스의 제공을 일시적으로 중단할 수 있습니다. 이 경우 회사는 회원들에 사이트를 통해 사전 공지합니다. 다만 긴급한 시스템 점검, 증설 및 교체, 설비의 장애, 서비스 이용자 폭주, 국가비상사태, 정전 등 부득이한 사유가 발생한 경우에는 사전 예고 없이 일시적으로 서비스의 전부 또는 일부를 중단할 수 있습니다.
3. 회사는 서비스 개편 등 서비스 운영 상 필요한 경우 회원에게 사전 예고 후 서비스의 전부 또는 일부의 제공을 중단할 수 있습니다.

제 11 조 (회원 게시물의 관리)
1. 회원의 게시물이 정보통신망법 및 저작권법 등 관련법에 위반되는 내용을 포함하는 경우, 회사는 관련법이 정한 절차에 따라 해당 게시물의 게시중단 및 삭제 등을 요청할 수 있습니다.
2. 회원이 서비스에 등록하는 게시물 등으로 인하여 본인 또는 타인에게 손해나 기타 문제가 발생하는 경우 전적으로 회원은 이에 대한 책임을 지며, 회사의 고의가 아닌 한 회사는 이에 대하여 책임을 지지 않습니다.
3. 회사는 다음 각호에 해당하는 게시물 등을 회원의 사전 동의 없이 임시게시 중단, 수정, 삭제, 이동 또는 등록거부 등 관련조치를 취할 수 있습니다.
① 다른 회원 또는 제3자에게 욕설 및 비방, 인신공격으로 불쾌감 및 모욕을 주거나 명예를 훼손하는 내용인 경우
② 다른 회원 또는 제3자의 저작권을 침해하거나 불법정보 유출과 관련된 글을 올리는 경우
③ 다른 회원 또는 제3자의 사생활 침해 및 개인정보를 유출하는 경우
④ 공공질서 및 미풍양속에 위반되는 내용을 유포하거나 링크시키는 경우
⑤ 불법복제 또는 해킹을 조장하는 내용인 경우
⑥ 영리를 목적으로 하는 광고 또는 사이트를 홍보하는 내용인 경우
⑦ 범죄와 결부된다고 객관적으로 인정되는 내용인 경우
⑧ 사적인 판단이나 지역감정 조성, 종교적 견해의 내용으로 회사가 서비스 성격에 부합하지 않는다고 판단하는 경우
⑨ 회사에서 규정한 게시물 운영원칙에 어긋나거나 게시판 성격에 부합하지 않는 경우
⑩ 기타 관계법령에 위배된다고 판단되는 경우
3. 회사는 광고성 게시물 차단 및 안정된 게시물 운영을 위해 일부 서비스에 대해 게시물 이용시간을 제한할 수 있습니다. 다만 이런 경우 이용시간을 해당 서비스에서 공지합니다.
4. 회사는 일부 서비스에 대해서 회원이 등록하는 게시물에 대해 사전 심의 후 게시 여부를 결정할 수 있습니다.

제 12 조 (게시물의 저작권)
1. 회원이 등록한 게시물에 대한 저작권은 해당 저작권자에게 귀속됩니다.
2. 회사가 작성한 게시물 또는 저작물에 대한 저작권, 기타 지적재산권은 회사에 귀속되므로 회원이 서비스를 이용하면서 얻은 저작물은 회사의 사전 승낙 없이 복제, 송신, 출판, 전송, 배포, 방송, 기타 방법에 의하여 영리목적으로 이용하거나 제3자에게 이용하게 해서는 안됩니다.
3. 회사는 서비스의 운영, 전시, 전송, 배포, 홍보의 목적으로 회원의 별도의 허락 없이 무상으로 저작권법에 규정하는 공정한 관행에 맞게 합리적인 범위 내에서 다음과 같이 회원이 등록한 게시물을 사용할 수 있습니다.
① 서비스 내에서 회원 게시물의 복제, 수정, 개조, 전시, 전송, 배포 및 원저작물을 해치지 않는 범위 내에서의 편집 저작물 작성하는 경우
② 서비스 제휴 파트너에게 회원의 게시물 내용을 제공, 전시 혹은 홍보하게 하는 경우
③ 휴대폰, PDA, IPTV 등 단말기에서 회원의 게시물 내용을 제공, 전시 혹은 홍보하게 하는 경우
4. 회사는 전항 이외의 방법으로 회원의 게시물을 이용하고자 하는 경우 전화, 팩스, 전자우편 등의 방법을 통해 사전에 회원의 동의를 얻어야 합니다.
5. 게시물에 대해 제3자로부터 저작권 및 기타 권리의 침해 또는 명예훼손, 음란성 등의 이유로 이의가 제기된 경우 회사는 당해 게시물을 임시 삭제할 수 있습니다. 이 경우 회사는 이의를 제기한 자와 게시물 등록자 간의 법적 문제가 종결된 후, 게시 요청이 있는 경우에는 삭제된 게시물을 재등록 할 수 있습니다.

제 13 조 (정보의 제공)
1. 회사는 회원의 서비스 이용에 필요하다고 인정되는 다양한 정보를 공지사항이나 전자우편, SMS, SNS 등의 방법으로 회원에게 제공할 수 있습니다. 다만 회원은 관련법에 따른 거래관련 정보 및 고객문의 등에 대한 답변 등을 제외하고는 언제든지 전자우편에 대해서 수신 거절을 할 수 있습니다
2. 회사는 서비스 개선 및 회원 대상의 서비스 제공 등을 목적으로 회원의 동의 하에 관련 법령에 따라 추가적인 개인정보를 수집할 수 있습니다.

제 14 조 (광고 게재)
1. 회사가 회원에게 서비스를 제공하기 위한 수익기반의 일부인 광고게재 및 판촉활동에 대해서 회원은 서비스 이용 시 제공되는 광고에 대해 동의합니다.
2. 회사는 회원 가입 시 광고메일 발송에 동의한 한 회원에 한해서 회사의 판단에 따라 이메일 광고를 회원의 이메일 주소로 발송, 제공합니다.
3. 회사는 서비스상에 게재되어 있거나 서비스를 통한 광고주의 판촉활동에 회원이 참여하거나 교신 또는 거래를 함으로써 발생하는 일체의 손실과 손해에 대해 책임을 지지 않습니다.
제 15 조 (계약 해지)
1. 회원이 이용계약을 해지하고자 할 경우에는 회원 본인이 회사에서 제공한 서비스 내 영역을 통해 가입 해지를 해야 합니다. 회사는 관련법 등이 정하는 바에 따라 이를 즉시 처리해야 합니다.
2. 회원이 이용계약을 해지할 경우, 회사가 회원정보를 보유하는 경우를 제외하고는 관련법 및 개인정보취급방침에 따라 해지 즉시 회원의 모든 데이터는 소멸됩니다.
3. 회원이 이용계약 해지를 한 경우 본인 계정에 등록된 게시물 일체는 삭제됩니다. 다만 제3자에 의한 스크랩, 담기 등으로 재게시되거나, 복제된 게시물과 타인의 게시물과 결합되어 제공되는 게시물 등은 그러하지 않습니다.
제 16 조 (서비스 이용제한)
1. 회사는 회원이 이 약관의 의무를 위반하거나 서비스의 정상적인 운영을 방해한 경우, 이용을 단계적으로 제한할 수 있습니다.
2. 회사는 주민등록법을 위반한 명의도용 및 결제도용, 저작권법 및 컴퓨터프로그램보호법을 위반한 불법프로그램의 제공 및 운영방해, 정보통신망법을 위반한 불법통신 및 해킹, 악성프로그램의 배포, 접속권한 초과행위 등과 같이 관련법령을 위반한 경우에는 즉시 영구이용정지를 할 수 있습니다.
3. 회사는 본 조의 제한의 조건 및 세부내용은 이용제한정책 및 개별 서비스상의 운영정책에서 정하는 바에 의합니다.
제 18 조 (손해배상)
1. 회사와 이용자는 서비스 이용과 관련하여 고의 또는 과실로 상대방에게 손해를 끼친 경우에는 이를 배상해야 합니다.
2. 단, 회사는 무료로 제공하는 서비스의 이용과 관련하여 개인정보취급방침에서 정하는 내용에 위반하지 않는 한 어떠한 손해도 책임지지 않습니다.
제 19 조 (책임제한)
1. 회사는 천재지변 또는 이에 준하는 불가항력 기타 이 약관에서 정한 정당한 사유로 인하여 서비스를 제공할 수 없게 된 경우에는 서비스 제공에 관한 책임이 면제됩니다.
2. 회사는 회원의 귀책사유로 인한 서비스 이용의 장애 또는 손해에 대해서는 책임을 지지 않습니다.
3. 회사는 회원간 또는 회원과 제3자 상호간에 서비스를 매개로 하여 거래 등을 한 경우에는 책임이 면제됩니다.
4. 회사는 제공하는 서비스에 포함된 모든 정보, 소프트웨어, 제품 등에 부정확함과 인쇄상의 오류로 인해 발생하는 정보의 부정확성에 대해서는 책임을 지지 않습니다.
5. 회사는 회원의 게시물을 등록 전에 상시적으로 사전심사 하거나 게시물의 내용을 확인 또는 검토할 의무가 없으므로 그 결과에 대한 책임은 지지 않습니다.
6. 회사에서 회원에게 무료로 제공하는 서비스의 이용과 관련해서는 어떠한 손해도 책임을 지지 않습니다.
제 20 조 (통지)
1. 회사는 회원에 대하여 통지를 하는 경우 회원이 회사에 등록한 전자우편 주소로 할 수 있습니다.
2. 회사는 불특정다수 회원에게 통지를 해야 할 경우 회사 게시판을 통해 7일 이상 게시함으로써 개별통지에 갈음할 수 있습니다.
제 21 조 (준거법 및 재판관할)
1. 이 약관에 명시되지 않은 사항은 대한민국 관계법령과 상관습에 따릅니다.
2. 서비스 이용으로 인한 분쟁에 대해 소송이 제기될 경우 회사의 본사 소재지를 관할하는 법원을 관할법원으로 합니다.
[부칙]
1. 이 약관은 2014년 5월 7일부터 시행합니다.
                </p>
            </div>
            <!-- // .rowner -->

            <!-- .rowner -->
            <div class="rowner personal-info">
                <div class="agree-input">
                    <input type="checkbox" id="personalInfo" class="partial-switch required">
                    <label for="personalInfo">개인정보처리 방침 <span class="required">(필수)</span></label>
                </div>
                <p class="contents">
한국일보닷컴(이하 ‘회사’)은 정보통신망 이용촉진 및 정보보호 등에 관한 법률, 개인정보보호법, 통신비밀보호법, 전기통신사업법, 등 정보통신서비스제공자가 준수하여야 할 관련 법령상의 개인정보보호 규정 및 방송통신위원회가 제정한 「개인정보보호지침」을 준수하고 있으며, 관련 법령에 의거한 개인정보취급방침을 정하여 이용자 권익 보호에 최선을 다하고 있습니다.

회사는 회원님들의 개인정보가 남용되거나 유출되지 않도록 최선을 다할 것이며, 이에 다음과 같이 회사의 개인정보 보호를 위한 방침에 대하여 알려드리고자 합니다.

단, 본 개인정보취급방침은 정부의 법령 및 지침의 변경, 또는 보다 나은 서비스의 제공을 위하여 그 내용이 변경될 수 있으니, 회원님들께서는 사이트 방문시 수시로 그 내용을 확인하여 주시기 바랍니다.

본 개인정보취급방침은 회사가 제공하는 서비스 (모바일 웹 포함) 이용에 적용되며 다음과 같은 내용을 담고 있습니다.

1. 수집하는 개인정보의 항목 및 수집방법
회사는 회원가입, 원활한 고객 상담, 각종 서비스의 제공을 위해 최초 회원가입 당시 아래와 같은 최소한의 개인정보를 필수항목으로 수집하고 있습니다.

가. 수집하는 개인정보의 항목
필수항목 : 이름, 생년월일, 아이디, 비밀번호, 메일주소, 휴대폰 번호, 주소, 가입인 증정보(참고로, 아동 관련 서비스를 제공할 때까지 만14세 미만 아동 회원은 가입을 불허합니다)
다만, 서비스 이용과정이나 사업처리 과정에서 IP Address, 쿠키, 방문 일시, 서비스 이용 기록, 불량 이용 기록, 결제기록 등이 자동으로 생성 되어 수집될 수 있습니다.
선택항목: 기존 아이디를 이용한 부가 서비스 및 맞춤식 서비스 이용 또는 이벤트 응모 과정에서 해당 서비스의 이용자에 한해서만 주민등록번호, 주소, 전 화번호, 직업 등의 정보들이 수집될 수 있습니다.
나. 개인정보 수집방법
회사는 다음과 같은 방법으로 개인정보를 수집합니다.
- 홈페이지, 서면양식, 팩스, 전화, 상담 게시판, 이메일, 이벤트 응모, 배송요청
2. 개인정보의 수집 및 이용목적
회사는 수집한 개인정보를 다음의 목적을 위해 활용합니다.

가. 서비스 제공
서비스 제공에 관한 계약 이행 및 서비스 제공에 따른 요금정산, 컨텐츠 제공, 특정 맞춤 서비스 제공, 물품배송 또는 청구서 등 발송, 본인인증, 구매 및 요금 결제, 요금추심
나. 회원관리
회원제 서비스 이용에 따른 본인확인, 개인식별, 한국일보닷컴 이용약관 위반 회원에 대한 이용제한 조치, 서비스의 원활한 운영에 지장을 미치는 행위 및 서비스 부정이용 행위 제재, 가입의사 확인, 가입 및 가입횟수 제한, 추후 아동 관련 서비스제공으로 인한 만14세 미만 아동 개인정보 수집 시 법정 대리인 동의여부 확인, 추후 법정 대리인 본인확인, 분쟁 조정을 위한 기록보존, 불만처리 등 민원처리, 고지사항 전달, 회원탈퇴 의사의 확인 다. 신규 서비스 개발 및 마케팅·광고에의 활용
신규 서비스 개발 및 맞춤 서비스 제공, 통계학적 특성에 따른 서비스 제공 및 광고 게재, 서비스의 유효성 확인, 이벤트 정보 및 참여기회 제공, 광고성 정보 제공, 접속빈도 파악, 회원의 서비스이용에 대한 통계
3. 개인정보의 공유 및 제공
회사는 이용자들의 개인정보를 "2. 개인정보의 수집목적 및 이용목적"에서 고지한 범위내에서 사용하며, 이용자의 사전 동의 없이는 동 범위를 초과하여 이용하거나 원칙적으로 이용자의 개인정보를 외부에 공개하지 않습니다. 다만, 아래의 경우에는 예외로 합니다.

- 이용자가 사전에 동의한 경우
- 법령의 규정에 의거하거나, 수사 목적으로 법령에 정해진 절차와 방법에 따라 수사기관의 요구가 있는 경우
4. 개인정보의 보유 및 이용기간
이용자의 개인정보는 원칙적으로 개인정보의 수집 및 이용목적이 달성되면 지체 없이 파기합니다. 단, 다음의 정보에 대해서는 아래의 이유로 명시한 기간 동안 보존합니다.

가. 회사 내부 방침에 의한 정보보유 사유
- 부정이용기록(부정가입, 징계기록 등의 비정상적 서비스 이용기록)
보존 이유 : 부정 이용 방지
보존 기간 : 15일
나. 관련법령에 의한 정보보유 사유
상법, 전자상거래 등에서의 소비자보호에 관한 법률 등 관계법령의 규정에 의하여 보존할 필요가 있는 경우 회사는 관계법령에서 정한 일정한 기간 동안 회원정보를 보관합니다. 이 경우 회사는 보관하는 정보를 그 보관의 목적으로만 이용하며 보존기간은 아래와 같습니다.
- 표시, 광고에 관한 기록
보존이유 : 전자상거래등에서의 소비자보호에 관한 법률
보존기간 : 6개월
- 계약 또는 청약철회 등에 관한 기록
보존이유 : 전자상거래등에서의 소비자보호에 관한 법률
보존기간 : 5년
- 대금결제 및 재화 등의 공급에 관한 기록
보존 이유 : 전자상거래 등에서의 소비자보호에 관한 법률
보존 기간 : 5년
- 소비자의 불만 또는 분쟁처리에 관한 기록
보존이유 : 전자상거래등에서의 소비자보호에 관한 법률
보존기간 : 3년
- 웹사이트 방문기록
보존이유 : 통신비밀보호법
보존기간 : 3개월
5. 개인정보 파기절차 및 방법
이용자의 개인정보는 원칙적으로 개인정보의 수집 및 이용목적이 달성되면 지체 없이 파기합니다. 회사의 개인정보 파기절차 및 방법은 다음과 같습니다.

가. 파기절차
- 이용자가 회원가입 등을 위해 입력한 정보는 목적이 달성된 후 별도의 DB로 옮겨져(종이의 경우 별도의 서류함) 내부 방침 및 기타 관련 법령에 의한 정보보호 사유에 따라(보유 및 이용기간 참조)일정 기간 저장된 후 파기됩니다.
- 동 개인정보는 법률에 의한 경우가 아니고서는 보유되는 이외의 다른 목적으로 이용되지 않습니다.
나. 파기방법
- 종이에 출력된 개인정보는 분쇄기로 분쇄하거나 소각을 통하여 파기합니다.
- 전자적 파일 형태로 저장된 개인정보는 기록을 재생할 수 없는 기술적 방법을 사용하여 삭제합니다.
6. 이용자 및 법정대리인의 권리와 그 행사방법
- 이용자는 언제든지 등록되어 있는 자신의 개인정보를 조회하거나 수정할 수 있으며, 회사의 개인정보의 처리에 동의하지 않는 경우 동의를 거부하거나 가입해지(회원탈퇴)를 요청하실 수 있습니다. 다만, 그러한 경우 서비스의 일부 또는 전부 이용이 어려울 수 있습니다.
- 이용자의 개인정보 조회, 수정을 위해서는 '개인정보변경'(또는 '회원정보수정' 등)을, 가입해지(동의철회)를 위해서는 "회원탈퇴"를 클릭하여 본인 확인 절차를 거치신 후 직접 열람, 정정 또는 탈퇴가 가능합니다.
- 혹은 개인정보관리책임자에게 서면, 전화 또는 이메일로 연락하시면 지체 없이 조치하겠습니다.
- 이용자가 개인정보의 오류에 대한 정정을 요청하신 경우에는 정정을 완료하기 전까지 당해 개인정보를 이용 또는 제공하지 않습니다. 또한 잘못된 개인정보를 제3 자에게 이미 제공한 경우에는 정정 처리결과를 제3자에게 지체 없이 통지하여 정정이 이루어지도록 하겠습니다.
- 회사는 이용자 혹은 법정 대리인의 요청에 의해 해지 또는 삭제된 개인정보는 "5. 개인정보의 보유 및 이용기간"에 명시된 바에 따라 처리하고 그 외의 용도로 열람 또는 이용할 수 없도록 처리하고 있습니다.
7. 개인정보 자동 수집 장치의 설치/운영 및 거부에 관한 사항
- 회사는 개인화되고 맞춤화된 서비스를 제공하기 위해서 이용자의 정보를 저장하고 수시로 불러오는 '쿠키(cookie)'를 사용합니다.
- 쿠키는 웹사이트를 운영하는데 이용되는 서버가 이용자의 브라우저에게 보내는 아주 작은 텍스트 파일로 이용자 컴퓨터의 하드디스크에 저장됩니다. 이후 이용자가 웹 사이트에 방문할 경우 웹 사이트 서버는 이용자의 하드 디스크에 저장되어 있는 쿠키의 내용을 읽어 이용자의 환경설정을 유지하고 맞춤화된 서비스를 제공하기 위해 이용됩니다.
- 쿠키는 개인을 식별하는 정보를 자동적/능동적으로 수집하지 않으며, 이용자는 언제든지 이러한 쿠키의 저장을 거부하거나 삭제할 수 있습니다.
가. 쿠키 사용 목적
회원과 비회원의 접속 빈도나 방문 시간 등을 분석, 이용자의 취향과 관심분야를 파악 및 자취 추적, 각종 이벤트 참여 정도 및 방문 회수 파악 등을 통한 타킷 마케팅 및 맞춤형 정보를 제공하기 위해 사용합니다.
다. 쿠키의 설치·운영 및 거부
- 이용자는 쿠키 설치에 대한 선택권을 가지고 있습니다. 따라서 이용자는 웹브라우저에서 옵션을 설정함으로써 모든 쿠키를 허용하거나, 쿠키가 저장될 때마다 확인을 거치거나, 아니면 모든 쿠키의 저장을 거부할 수도 있습니다.
- 다만, 쿠키의 저장을 거부할 경우에는 로그인이 필요한 일부 서비스는 이용에 어려움이 있을 수 있습니다.
- 쿠키 설치 허용 여부를 지정하는 방법(Internet Explorer의 경우)은 다음과 같습니다.
① [도구] 메뉴에서 [인터넷 옵션]을 선택합니다.
② [개인정보 탭]을 클릭합니다.
③ [개인정보취급 수준]을 설정하시면 됩니다.
8. 개인정보의 기술적·관리적 보호 대책
회사는 이용자들의 개인정보를 취급함에 있어 개인정보가 분실, 도난, 누출, 변조 또는 훼손되지 않도록 안전성 확보를 위하여 다음과 같은 기술적·관리적 대책을 강구하고 있습니다.

가. 비밀번호 암호화
회원 아이디(ID)의 비밀번호는 암호화되어 저장 및 관리되고 있어 본인만이 알고 있으며, 개인정보의 확인 및 변경도 비밀번호를 알고 있는 본인에 의해서만 가능합니다.
나. 해킹 등에 대비한 대책
회사는 해킹이나 컴퓨터 바이러스 등에 의해 이용자의 개인정보가 유출되거나 훼손되는 것을 막기 위해 외부로부터 접근이 통제된 구역에 시스템을 설치하고, 침입 차단장치 이용 및 침입탐지시스템을 설치하여 감시하고 있습니다. 그리고 백신 프로그램을 주기적으로 업데이트하며 갑작스런 바이러스가 출현할 경우 백신이 나오는 즉시 이를 적용함으로써 개인정보가 침해 방지를 위해 노력하고 있습니다.
다. 개인정보처리시스템 접근 제한
회사는 개인정보를 처리할 수 있도록 체계적으로 구성한 데이터베이스시스템에 대한 접근권한의 부여, 변경, 말소 등에 관한 기준을 수립하고 비밀번호의 생성 방법, 변경 주기 등을 규정 운영하며 기타 개인정보에 대한 접근통제를 위해 필요한 조치를 다하고 있습니다.
라. 개인정보 취급 직원의 교육
개인정보관련 취급 직원은 담당자에 한정시켜 최소화 하고 새로운 보안기술의 습득 및 개인정보보호 의무에 관해 정기적인 교육을 실시하며 별도의 비밀번호를 부여하여 접근 권한을 관리하는 등 관리적 대책을 시행하고 있습니다.
9. 개인정보관리책임자 및 담당자의 연락처
회사는 개인정보를 보호하고 개인정보와 관련한 불만을 처리하기 위하여 아래와 같이 개인정보관리책임자를 지정하고 있습니다. 이용자는 서비스를 이용하면서 발생하는 모든 개인정보보호 관련 민원을 개인정보관리책임자로 신고하실 수 있습니다. 회사는 이용자들의 신고사항에 대해 신속하게 충분한 답변을 드릴 것입니다.

개인정보 관리책임자
성명: 이영태 국장
소속: 디지털콘텐츠국
전화: 02-724-2486
이메일: ytlee@hankookilbo.com
개인정보 관리담당자
성명: 안경모 팀장
소속: 개발팀
전화: 02-724-2419
이메일: zuckbox@hankookilbo.com
기타 개인정보침해에 대한 신고나 상담이 필요하신 경우에는 아래 기관에 문의하시기 바랍니다.
- 개인정보침해신고센터 ( www.118.or.kr / 국번없이 118)
- 대검찰청 사이버범죄수사단 ( www.spo.go.kr / 02-3480-3571)
- 경찰청 사이버테러대응센터 ( www.ctrc.go.kr / 국번없이 182)
10. 고지의 의무
현 개인정보취급방침 내용 추가, 삭제 및 수정이 있을 시에는 개정 최소 7일전부터 홈페이지의 공지사항을 통해 고지할 것입니다.

- 공고일자 : 2014년 5월 8일
- 시행일자 : 2014년 5월 15일
                </p>
            </div>
            <!-- // .rowner -->

            <!-- .rowner .event-promotion -->
            <div class="rowner event-promotion">
                <p>이벤트/프로모션 등 정보 수신 동의 <span class="optional">(선택)</span></p>
                <ul class="agree-list">
                    <li>
                        <input type="checkbox" id="toMail" name="toMail" checked class="to-mail partial-switch">
                        <label for="toMail">이메일</label>
                    </li>
                    <li>
                        <input type="checkbox" id="toSMS" name="toSMS" class="to-sms partial-switch">
                        <label for="toSMS">SMS</label>
                    </li>
                    <li>
                        <input type="checkbox" id="toNewsLetter" name="toNewsLetter" class="to-news-letter partial-switch">
                        <label for="toNewsLetter">뉴스레터</label>
                    </li>
                </ul>
            </div>
            <!-- // .rowner .event-promotion -->
            <p class="term-warn">이용약관 및 개인정보 처리 방침은 필수 항목 입니다.</p>

            <button class="btn-main" onclick="onClickNext(event)">다음</button>
        </form>
    </div>
    <!-- // .cont -->
</div>
<!-- popup-alert join-form agree -->

<!-- popup-alert access-term -->
<div class="popup-alert access-term">
    <h1 class="tit">
        약관 동의 필수
    </h1>
    <div class="cont">
        <p>
            이용약관에 동의 하셔야 합니다.
        </p>
    </div>
    <div class="btn-area">
        <button class="btn-black font-medium" type="button" onclick="$('.access-term').closePopup();">확인</button>
    </div>
</div>
<!-- popup-alert access-term -->

<!-- popup-alert user-info -->
<div class="popup-alert user-info">
    <h1 class="tit">
        약관 동의 필수
    </h1>
    <div class="cont">
        <p>
            개인정보처리 방침에 동의 하셔야 합니다.
        </p>
    </div>
    <div class="btn-area">
        <button class="btn-black font-medium" type="button" onclick="$('.user-info').closePopup();">확인</button>
    </div>
</div>

<script>
    var agreeAll;
    var accessTermAgree;
    var userInfoAgree;
    var emailAgree;
    var smsAgree;
    var newsLetterAgree;

    function onClickNext(event) {
        event.preventDefault();

        agreeAll = $('input:checkbox[id="totalAgree"]').is(":checked");
        accessTermAgree = $('input:checkbox[id="accessTerm"]').is(":checked");
        userInfoAgree = $('input:checkbox[id="personalInfo"]').is(":checked");
        emailAgree = $('input:checkbox[id="toMail"]').is(":checked");
        smsAgree = $('input:checkbox[id="toSMS"]').is(":checked");
        newsLetterAgree = $('input:checkbox[id="toNewsLetter"]').is(":checked");

        // 전체 동의 여부

        if (agreeAll) {
            if (signUpType === 'None') {
                // 전체 동의로 넘긴다?
                $('.popup-alert').closePopup();
                $('.popup-alert.join-form.join').openPopup();
                return;
            } else {
                $('.popup-alert').closePopup();
                $('.popup-alert.add-nick').openPopup();
                $('p.term-warn').addClass('blind');
                return;
            }
        }

        // 이용약관 체크 했는지 여부
        if (!accessTermAgree) {
            $('.popup-alert.access-term').openPopup();
            return;
        }

        if (!userInfoAgree) {
            $('.popup-alert.user-info').openPopup();
            return;
        }

        if (accessTermAgree && userInfoAgree) {
            if (signUpType === 'None') {
                // 전체 동의로 넘긴다?
                $('.popup-alert').closePopup();
                $('.popup-alert.join-form.join').openPopup();
                return;
            } else {
                $('.popup-alert').closePopup();
                $('.popup-alert.add-nick').openPopup();
                $('p.term-warn').addClass('blind');
                return;
            }
        }

        $('p.term-warn').addClass('blind');
    }
    // 개인정보 체크 했는지 여부

</script>

<!-- popup-alert join-form join -->
<div class="popup-alert popup-medium join-form join">
    <!-- .popup-header -->
    <div class="popup-header">
        <div class="logo"></div>
        <a href="javascript:;" class="btn-close" onclick="$('.join').closePopup();"></a>
        <h2 class="tit">회원가입</h2>
    </div>
    <!-- // .popup-header -->

    <!-- .cont -->
    <div class="cont">
        <!-- .write-list -->
        <ul class="write-list">
            <li class="confirm-field">
                <div class="title">
                    <label for="userId">아이디(이메일)</label>
                </div>
                <div class="inn">
                    <input type="text" name="userId" id="userId" placeholder="아이디는 이메일입니다."
                           onchange="onChangeEmail(this)">
                    <a href="javascript:;" class="btn-empty-main" onclick="onClickCheckEmailDuplicated()">중복확인</a>
                    <p class="guide-msg blind" id="sign-up-email-guide-msg">사용 가능한 아이디 입니다.</p>
                </div>
            </li>
            <li>
                <div class="title">
                    <label for="userPwd">비밀번호</label>
                </div>
                <div class="inn">
                    <input type="password" name="userPwd" id="userPwd" placeholder="8~16자 영문 대소문자,숫자,특수문자"
                           maxlength="16">
                </div>
            </li>
            <li>
                <div class="title">
                    <label for="userPwdChk">비밀번호 확인</label>
                </div>
                <div class="inn">
                    <input type="password" name="userPwdChk" id="userPwdChk" maxlength="16">
                    <div class="guide-msg warn blind" id="sign-up-password-guide-msg">3~10자 영문 대소문자, 숫자 및 특수문자를
                        사용해주세요.
                    </div>
                </div>
            </li>
        </ul>
        <!-- // .write-list -->
        <!-- .name-list -->
        <ul class="name-list">
            <li class="user-name">
                <div class="title">
                    <p>이름</p>
                </div>
                <div class="inn">
                    <p id="username"></p>
                </div>
            </li>
            <li class="confirm-field">
                <div class="title">
                    <label for="userNickname">필명</label>
                </div>
                <div class="inn">
                    <input type="text" id="userNickname" placeholder="3~10자 한글, 영문 대소문자, 숫자"
                           onchange="onChangePenName(this)">
                    <a href="javascript:;" class="btn-empty-main" onclick="onClickCheckPennameDuplicated()">중복확인</a>
                    <p class="exp-text">댓글 작성 시 필명이 노출 됩니다.</p>
                    <p class="guide-msg blind" id="sign-up-pen-name-guide-msg">사용 가능한 필명입니다.</p>
                </div>
            </li>
        </ul>
        <!-- // .name-list -->
        <button class="btn-main" type="button" onclick="submit(event); return false;">확인</button>
    </div>
    <!-- // .cont -->
</div>
<!-- popup-alert join-form join -->


<!-- popup-alert add-nick -->
<div class="popup-alert add-nick">
    <!-- .popup-header -->
    <div class="popup-header">
        <a href="javascript:;" class="btn-close" onclick="$('.add-nick').closePopup();"></a>
        <h2 class="tit">필명</h2>
    </div>
    <!-- // .popup-header -->

    <!-- .cont -->
    <div class="cont">
        <!-- .info-list -->
        <ul class="info-list">
            <li class="confirm-field">
                <div class="inn">
                    <input type="text" id="userNick" name="userNick" placeholder="3~10자 한글, 영문 대소문자, 숫자" maxlength="10"
                           onchange="onChangeSnsPenName(this)">
                    <a href="javascript:;" class="btn-empty-main" onclick="onClickCheckSnsPennameDuplicated()">중복확인</a>
                    <p class="exp-text">댓글 작성 시 필명이 노출됩니다.</p>
                    <p class="guide-msg blind" id="social-sign-up-pen-name-guide-msg">사용 가능한 필명입니다.</p>
                </div>
            </li>
        </ul>
        <!-- // .info-list -->

        <button class="btn-main" onClick="submitSocial();">확인</button>
    </div>
    <!-- // .cont -->
</div>
<!-- popup-alert add-nick -->

<!-- popup-alert no-account -->
<div class="popup-alert no-account">
    <h1 class="tit">
        회원가입 완료
    </h1>
    <div class="cont">
        <p>
            한국일보 회원가입이 완료 되었습니다.
        </p>
    </div>
    <div class="btn-area">
        <button class="btn-black" type="button" onclick="$('.no-account').closePopup(); $('.popup-login').openPopup();">확인</button>
    </div>
</div>
<!-- popup-alert no-account -->

<script>
    var email = '', password = '', passwordConfirm = '', penName = '', snsPenName = '';
    var isValidEmail, isValidPenName, isValidPassword = false;
    var emailRegex = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    var penNameRegex = /^[ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|_ \*]{3,10}$/;
    var passwordRegex = /^[a-zA-Z0-9]{8,16}$/;
    var passwordRegex2 = /^(?=.*[A-Za-z])(?=.*\d)(?=.*[$@$!%*#?&])[A-Za-z\d$@$!%*#?&]{8,16}$/;

    var emailGuideMessage = $('#sign-up-email-guide-msg');
    var passwordGuideMessage = $('#sign-up-password-guide-msg');
    var penNameGuideMessage = $('#sign-up-pen-name-guide-msg');
    var socialPenNameGuideMessage = $('#social-sign-up-pen-name-guide-msg');

    function onChangeEmail(emailInput) {
        email = emailInput.value;

        if (!emailRegex.test(email)) {
            isValidEmail = false;
            emailGuideMessage.text('이메일 형식의 아이디를 사용해주세요.');
            emailGuideMessage.removeClass('blind').addClass('warn');
        }
    }

    $("#userPwd").on('keyup', function (input) {
        // comment = value;
        password = input.target.value;
        // 비밀번호 정규식이 일치하지 않으면
        if (!passwordRegex.test(password) && !passwordRegex2.test(password)) {
            passwordGuideMessage.text('8~16자 영문 대소문자, 숫자 및 특수문자를 사용해주세요');
            passwordGuideMessage.removeClass('blind').addClass('warn');
            isValidPassword = false;
        // 비밀번호가 일치하지 않으면
        } else if (password !== passwordConfirm) {
            passwordGuideMessage.text('비밀번호가 일치하지 않습니다.');
            passwordGuideMessage.removeClass('blind').addClass('warn');
            isValidPassword = false;
        // 비밀번호가 일치하면
        } else {
            passwordGuideMessage.text('비밀번호가 일치합니다.');
            passwordGuideMessage.removeClass('blind warn');
            isValidPassword = true;
        }
        // your code here
    });

    $("#userPwdChk").on('keyup', function (input) {
        passwordConfirm = input.target.value;

        // 비밀번호 정규식이 일치하지 않으면
        if (!passwordRegex.test(passwordConfirm) && !passwordRegex2.test(passwordConfirm)) {
            passwordGuideMessage.text('8~16자 영문 대소문자, 숫자 및 특수문자를 사용해주세요');
            passwordGuideMessage.removeClass('blind').addClass('warn');
            isValidPassword = false;
        // 비밀번호가 일치하지 않으면
        } else if (password !== passwordConfirm) {
            passwordGuideMessage.text('비밀번호가 일치하지 않습니다.');
            passwordGuideMessage.removeClass('blind').addClass('warn');
            isValidPassword = false;
        // 비밀번호가 일치하면
        } else {
            passwordGuideMessage.text('비밀번호가 일치합니다.');
            passwordGuideMessage.removeClass('blind warn');
            isValidPassword = true;
        }
    });

    function onChangePenName(penNameInput) {
        penName = penNameInput.value;
    }

    function onChangeSnsPenName(penNameInput) {
        snsPenName = penNameInput.value;
    }


    // 이메일 중복체크
    function onClickCheckEmailDuplicated() {

        // 이메일 regex 체크
        if (!emailRegex.test(email)) {
            isValidEmail = false;
            emailGuideMessage.text('이메일 형식의 아이디를 사용해주세요.');
            emailGuideMessage.removeClass('blind').addClass('warn');
            return;
        }

        $.ajax({
            type: "GET",
            url: '/users/exist?memId=' + email,
        }).success(function (response) {
            console.log('본인 인증 회원가입 -> 이메일 중복 확인');
            console.log(JSON.parse(response));
            var flag = JSON.parse(response);

            // 아이디 중복 아닐시
            if (!flag) {
                isValidEmail = true;
                emailGuideMessage.text('사용 가능한 아이디입니다.');
                emailGuideMessage.removeClass('blind').removeClass('warn');

            } else {
                // 아이디 중복시
                isValidEmail = false;
                emailGuideMessage.text('이미 등록된 아이디입니다.');
                emailGuideMessage.removeClass('blind').addClass('warn');
            }
        }).fail(function (error) {
            console.log('본인 인증 회원가입 에러 -> 이메일 중복 확인');
            console.log(JSON.parse(error.responseText));
        });
    }

    // 필명 중복체크
    function onClickCheckPennameDuplicated() {
        $('.exp-text').addClass('blind');

        // 필명 정규식이 일치하지 않을 경우
        if (!penNameRegex.test(penName)) {
            penNameGuideMessage.text('3~10자 한글, 영문 대소문자, 숫자를 사용해주세요');
            penNameGuideMessage.removeClass('blind').addClass('warn');

            socialPenNameGuideMessage.text('3~10자 한글, 영문 대소문자, 숫자를 사용해주세요');
            socialPenNameGuideMessage.removeClass('blind').addClass('warn');
            isValidPenName = false;

            return;
        }
        // 필명 정규식이 일치할 경우
        // 필명 중복 체크 api 요청해서 분기처리
        checkPenNameDuplicated(penName);
    }

    /**
     * 본인인증 필명 중복 체크
     */
    function checkPenNameDuplicated(penName) {
        $.ajax({
            type: "GET",
            url: '/users/exist?memPenName=' + penName
        }).success(function (response) {
            // Do something

            console.log('SNS 회원가입 -> 필명 중복 확인');
            console.log(JSON.parse(response));
            var flag = JSON.parse(response);

            // 필명 중복 아닐시
            if (!flag) {
                socialPenNameGuideMessage.text('사용 가능한 필명입니다.');
                socialPenNameGuideMessage.removeClass('blind warn');
                penNameGuideMessage.text('사용 가능한 필명입니다.');
                penNameGuideMessage.removeClass('blind warn');
                isValidPenName = true;
            } else {
                // 필명 중복시
                socialPenNameGuideMessage.text('이미 등록된 필명입니다.');
                socialPenNameGuideMessage.removeClass('blind').addClass('warn');
                penNameGuideMessage.text('이미 등록된 필명입니다.');
                penNameGuideMessage.removeClass('blind').addClass('warn');
                isValidPenName = false;
            }
        }).fail(function (error) {
            console.log('SNS 회원가입 에러 -> 필명 중복 확인');
            console.log(JSON.parse(error.responseText));
        });
    }

    // sns 필명 중복체크
    function onClickCheckSnsPennameDuplicated() {
        $('.exp-text').addClass('blind');

        // 필명 정규식이 일치하지 않을 경우
        if (!penNameRegex.test(snsPenName)) {

            socialPenNameGuideMessage.text('3~10자 한글, 영문 대소문자, 숫자를 사용해주세요');
            socialPenNameGuideMessage.removeClass('blind').addClass('warn');
            isValidPenName = false;
            return;
        }
        // 필명 정규식이 일치할 경우
        checkPenNameDuplicated(snsPenName);
    }

    /**
     * 본인인증 회원가입
     */
    function submit(event) {
        event.preventDefault();
        event.stopImmediatePropagation();

        // 이메일 검증
        if (!isValidEmail) {
            emailGuideMessage.text('이메일 중복확인을 진행해주세요.');
            emailGuideMessage.removeClass('blind');
            return;
        }

        // 필명 검증
        if (!isValidPenName) {
            penNameGuideMessage.text('필명 중복확인을 진행해주세요.');
            penNameGuideMessage.removeClass('blind');
            socialPenNameGuideMessage.text('필명 중복확인을 진행해주세요.');
            socialPenNameGuideMessage.removeClass('blind');
            return;
        }

        // 비밀번호 검증
        if (!isValidPassword) {
            return;
        }

        $.ajax({
            url: '/auth/sign-up',
            method: "POST",
            contentType: 'application/json',
            data: JSON.stringify({
                memId: email,
                memEmail: email,
                memPw: password,
                memName: niceVeryfiyInfo.NAME,
                memBirthYmd: niceVeryfiyInfo.BIRTHDATE,
                memPenName: penName,
                snsDiv: signUpType,
                provisionAgree: 'Y',
                privacyAgree: 'Y',
                eventAgreeEmail: emailAgree ? 'Y' : 'N',
                eventSmsAgree: smsAgree ? 'Y' : 'N',
                nLetterAgree: newsLetterAgree ? 'Y' : 'N',
                memMobile: niceVeryfiyInfo.MOBILE_NO ,
                memSex: niceVeryfiyInfo.GENDER === '1' ? "Male" : "Female",
                di: niceVeryfiyInfo.DI,
                ci: niceVeryfiyInfo.CI,
            })
        }).success(function (response) {
            console.log('본인인증 회원가입 -> 회원가입 성공');
            console.log(response);
            reset();
            $('.popup-alert').closePopup();
            $('.popup-alert.no-account').openPopup();
        }).fail(function (err) {
            console.log('본인인증 회원가입 -> 회원가입 에러');
        });


        // Do something
    }

    /**
     * SNS 회원가입
     */
    function submitSocial() {
        if (!isValidPenName) {
            socialPenNameGuideMessage.text('필명 중복확인을 진행해주세요.');
            socialPenNameGuideMessage.removeClass('blind');
            return;
        }

        $.ajax({
            url: '/auth/sign-up',
            method: "POST",
            contentType: 'application/json',
            data: JSON.stringify({
                memId: snsUserSignUpDto.id,
                memPw: snsUserSignUpDto.id + "@" + signUpType,
                memName: snsUserSignUpDto.name === '' ? '' : snsUserSignUpDto.name,
                memBirthYmd: snsUserSignUpDto.birthDay,
                memPenName: snsPenName,
                snsDiv: signUpType,
                memSex: snsUserSignUpDto.sex,
                provisionAgree: 'Y',
                privacyAgree: 'Y',
                eventAgreeEmail: emailAgree ? 'Y' : 'N',
                eventSmsAgree: smsAgree ? 'Y' : 'N',
                nLetterAgree: newsLetterAgree ? 'Y' : 'N'
            })
        }).success(function (response) {
            console.log('SNS 회원가입 -> 회원가입 성공');
            console.log(response);
            reset();
            $('.popup-alert').closePopup();
            $('.popup-alert.no-account').openPopup();
        }).fail(function (err) {
            console.log('SNS 회원가입 -> 회원가입 에러');
        });
        // Do something
    }

    function reset() {
        $('#userNick').val("");
        $('#userNickname').val("");
        email = '';
        password = '';
        passwordConfirm = '';
        penName = '';
        snsPenName = '';
        isValidEmail = false;
        isValidPenName = false;
    }
</script>
<script src="/js/split/userAgree.js"></script>
<!-- popup-alert user-info -->


<script language='javascript'>
    $.ajax({
        type: "GET",
        url: '/auth/cp/data'
    }).success(function (response) {
        $('form input[name="EncodeData"]').val(response.data);
    });

    /**
     * Nice 본인 인증 팝업 오픈
     */
    function openCpPopup() {
        window.open('', 'popupChk', 'width=500, height=550, top=100, left=100, fullscreen=no, menubar=no, status=no, toolbar=no, titlebar=yes, location=no, scrollbar=no');
        document.form_chk.action = "https://nice.checkplus.co.kr/CheckPlusSafeModel/checkplus.cb";
        document.form_chk.target = "popupChk";
        document.form_chk.submit();
    }

    /**
     * 본인 인증 성공시
     * @param encData
     */
    function cpSuccess(encData) {
        $.ajax({
            url: '/auth/cp/verify',
            type: 'POST',
            data: JSON.stringify({
                data: encData,
                authType: authType
            }),
            dataType: 'json',
            contentType: 'application/json',
            timeout: 30000,
            success: function (data) {
                console.log(data);
                niceVeryfiyInfo = data;
                // 중복 가입인지 아닌지 체크해서 분기 처리하는 함수
                checkExistUserNice();


            },
            error: function (req, stat, err) {
                console.log(err);
            },
            complete: function () {
                CP_CALLBACK_SUCCESS = null;
                CP_CALLBACK_ERROR = null;
            }
        }); // ajax
    }

    /**
     * 본인인증 회원 중복체크
     */
    function checkExistUserNice() {
        $.ajax({
            type: "GET",
            url: '/users/exist?ci=' + encodeURIComponent(niceVeryfiyInfo.CI) + "&di=" + encodeURIComponent(niceVeryfiyInfo.DI)
        }).success(function (response) {
            console.log('본인 인증 회원가입 -> 본인 중복 확인');
            console.log(JSON.parse(response));
            var flag = JSON.parse(response);
            if (flag) {
                // 중복이면 이미 가입된 회원
                // 회원가입일 경우
                if (authType === 'enroll') {
                    $('.popup-alert').closePopup();
                    $('#sign-up-duplication-alert').openPopup();
                    niceVeryfiyInfo = null;

                    // 아이디 찾기일 경우
                } else if (authType === 'idfind') {
                    $.ajax({
                        type: "GET",
                        url: '/users/find-id?ci=' + encodeURIComponent(niceVeryfiyInfo.CI) + "&di=" + encodeURIComponent(niceVeryfiyInfo.DI)
                    }).success(function (response) {
                        console.log(response);
                        // 사용자가 있으면
                        if (response !== null) {
                            $('.popup-alert').closePopup();
                            $('#find-id-guide-text').text(response.memName + "/" + niceVeryfiyInfo.MOBILE_NO + "으로 찾은 아이디입니다.");
                            $('#find-id-id-text').text(response.memId);
                            $('#find-id-result-popup').closePopup();
                            $('#find-id-result-popup').openPopup();
                            // 사용자가 없으면
                        } else {
                            $('.popup-alert').closePopup();
                            ('#find-id-no-account-popup').openPopup();
                        }

                    }).fail(function (response) {
                        console.log('아이디 찾기 에러')
                    });
                } else if (authType === 'pwfind') {
                    $('#find-password-change-password-popup').openPopup();
                } else if (authType === 'pwchange') {
                    $('#my-page-edit-pw-popup').openPopup();
                } else if (authType === 'pennamechange') {
                    $('#my-page-edit-pen-name-popup').openPopup();
                }
            // 본인인증으로 찾은 아이디가 없을 때
            } else {
                // 회원가입일 경우
                if (authType === 'enroll') {
                    signUpType = 'None';
                    $('.popup-alert').closePopup();
                    $('.popup-medium.join-form.agree').openPopup();
                    $('#username').text(niceVeryfiyInfo.NAME);
                    // 아이디 찾기일 경우
                } else if (authType === 'idfind') {

                }
                // 중복 가입이 아니면 약관 동의 화면우
            }
        }).fail(function (error) {
            console.log('SNS 회원가입 -> 본인 중복 확인 체크 에러');
            console.log(JSON.parse(error.responseText));
        });
    }
</script>

<!-- 본인인증 서비스 팝업을 호출하기 위해서는 다음과 같은 form이 필요합니다. -->
<form name="form_chk" method="post">
    <input type="hidden" name="m" value="checkplusSerivce">                        <!-- 필수 데이타로, 누락하시면 안됩니다. -->
    <input type="hidden" name="EncodeData">        <!-- 위에서 업체정보를 암호화 한 데이타입니다. -->
</form>


<!-- popup-alert -->
<div id="sign-in-request-alert" class="popup-alert">
    <h1 class="tit">
        로그인 요청
    </h1>
    <div class="cont">
        <p>
            로그인 한 후 이용 가능합니다.
            <br>로그인 하시겠습니까?
        </p>
    </div>
    <div class="btn-area">
        <button class="btn-gray" type="button" onclick="$('.popup-alert').closePopup()">아니오</button>
        <button class="btn-black" type="button" onclick="$('.popup-alert').closePopup(); openSignInPopUp()">네</button>
    </div>
</div>
<!-- popup-alert --><!-- 이메일로 기사 공유하기 팝업 -->
<div class="popup-alert popup-medium user-form-popup">
    <!-- .popup-header -->
    <div class="popup-header">
        <div class="logo"></div>
        <a href="javascript:;" class="btn-close" onclick="$('.user-form-popup').closePopup();"></a>
        <h2 class="tit">이메일로 기사 공유하기</h2>
    </div>
    <!-- // .popup-header -->

    <!-- .cont -->
    <div class="cont">
        <!-- form -->
        <!-- .send-mail-title -->
        <div class="send-mail-title">
            <p class="form-group-title">보내는 기사</p>
            <h3 class="article-title">트럼프 “동맹 한국과 코로나19 긴밀 협력”… 美 26개 주 확산</h3>
        </div>
        <!-- // .send-mail-title -->
        <!-- .form-group .column-2 -->
        <div class="form-group column-2">
            <div class="title">
                <span>받으실 분</span>
            </div>
            <div class="inn">
                <label for="receiver-input">이메일</label>
                <div class="input-area">
                    <input type="text" id="receiver-input" placeholder="이메일">
                    <p id="receiver-guide-msg" class="exp-text">여러사람에게 보낼 경우 메일주소는 세미콜론(;)으로 구분해 주세요.<br>(최대 5개)</p>
                </div>
            </div>
        </div>
        <!-- // .form-group .column-2 -->

        <!-- .form-group -->
        <div class="form-group send-user">
            <h4 class="form-group-title">보내는 분</h4>
            <ul class="form-list column-2">
                <li>
                    <div class="inn">
                        <label for="sender-name-input">이름</label>
                        <div class="input-area">
                            <input type="text" name="sendUser" id="sender-name-input">
                            <p id="sender-name-guide-msg" class="warn blind">보내는 분의 이름을 입력해주세요.</p>
                        </div>
                    </div>
                </li>
                <li>
                    <div class="inn">
                        <label for="sender-email-input">이메일</label>
                        <div class="input-area">
                            <input type="text" name="sendEmail" id="sender-email-input">
                            <p id="sender-email-guide-msg" class="warn blind">올바른 이메일 형식이 아닙니다.</p>
                        </div>
                    </div>
                </li>
                <li>
                    <div class="inn">
                        <label for="sender-ps-input">함께 보내는 메세지</label>
                        <div class="input-area">
                            <textarea name="sendMsg" id="sender-ps-input"></textarea>
                        </div>
                    </div>
                </li>
            </ul>
        </div>
        <!-- // .form-group -->

        <button id="mail-send-btn" class="btn-main disabled" onclick="onClickSendMail(event)">메일 전송</button>
        <!-- // form -->
    </div>
    <!-- // .cont -->
</div>
<!-- 이메일로 기사 공유하기 팝업 -->

<!-- 이메일로 기사 공유하기 완료 팝업 -->
<div class="popup-alert complete-send">
    <h1 class="tit">
        전송 완료
    </h1>
    <div class="cont">
        <p>
            기사가 메일로 전송 되었습니다.
        </p>
    </div>
    <div class="btn-area">
        <button class="btn-black font-medium" type="button" onclick="$('.complete-send').closePopup();">확인</button>
    </div>
</div>
<!-- 이메일로 기사 공유하기 완료 팝업 -->

<!-- 구독 취소하시겠습니까? 팝업 -->
<div id="delete-subscription-popup" class="popup-alert cancel-subsc">
    <h1 class="tit">
        구독 취소
    </h1>
    <div class="cont">
        <p>
            구독을 취소하시겠습니까?
        </p>
    </div>
    <div class="btn-area">
        <button class="btn-black" type="button" onclick="$('.cancel-subsc').closePopup();">아니오</button>
        <button class="btn-black font-medium" type="button"
                onclick="$('#delete-subscription-popup').closePopup(); subscribeArticle();">네
        </button>
    </div>
</div>
<!-- 구독 취소하시겠습니까? 팝업 -->

<!-- 좋아요 or 싫어요 이미 선택 팝업 -->
<div id="article-sympathy-exist-popup" class="popup-alert already-check">
    <h1 class="tit">
        중복 선택 불가 안내
    </h1>
    <div class="cont">
        <p>
            이미 공감 표현을 선택하신<br>
            기사입니다. 변경을 원하시면 취소<br>
            후 다시 선택해주세요.
        </p>
    </div>
    <div class="btn-area">
        <button class="btn-black font-medium" type="button" onclick="$('.already-check').closePopup();">확인</button>
    </div>
</div>
<!-- 좋아요 or 싫어요 이미 선택 팝업 -->

</div>
    <!-- // .container .end -->

    <!-- .add-main -->
    <div class="add-main" style="padding-top: unset; z-index: 2;">
        <div id="main">

        </div>
        <!-- popup-more -->
        <div class="popup-more">
            <div class="inn">
                <a href="/">
                    <strong>뉴스 더보기</strong><br>
                    <span>한국일보 홈으로 이동합니다.</span>
                </a>
            </div>
        </div>
        <!-- // popup-more -->
    </div>
    <script>
        $('.popup-more').hide();
        $( '#main' ).load( '/Article/Main div.wrap', function() {
            $.getScript('/js/split/mainPage.js');

            $('.popup-more').show();

            // 많이 본 기사
            var $target = $('ul.hook-best');
            if ($target) {
                // 메인 추가 조회
                $.ajax({
                    url: '/section/more?panType=MAIN',
                    type: 'GET',
                    dataType: 'json',
                    contentType: 'application/json',
                    timeout: 30000,
                    success: function (data) {

                        var $li = $($target.find('li'));
                        $target.empty();
                        var articles = data.topViewArticles;
                        for (var i = 0; i < articles.length; i++) {
                            var article = articles[i];
                            var item = $li.clone();
                            item.find('span').text(i + 1);
                            item.find('a').text(article.articleTitle);
                            item.find('a').attr('href', article.articleUrl);
                            item.find('a').attr('target', '_' + article.articleLinkTargetType);
                            $target.append(item);
                        }

                        $.getScript('/js/split/currentPosition.js');
                    },
                    error: function (req, stat, err) {
                        // console.log(err);
                    }
                }); // ajax
            }

            function areaRolling(selector, interval) {
                var $targets = $(selector);
                var length = $targets.length;
                var startIndex = Math.floor(Math.random() * length);
                startIndex = areaShow($targets, length, startIndex);

                if (length > 1) {
                    setInterval(function() {
                        startIndex = areaShow($targets, length, startIndex);
                    }, interval);
                }
            }

            function areaShow($targets, targetLength, startIndex) {
                $targets.hide();
                $($targets[startIndex]).show();
                startIndex++;
                if (startIndex == targetLength) {
                    startIndex = 0;
                }

                return startIndex;
            }

            // 오늘의 컨텐츠
            areaRolling('.todyas', 10000);
        });
    </script>
<!-- // .add-main -->
</div>
<!-- // wrap -->

<input id="articleId" type="hidden" value="202003071089316921"/>
<input id="shoulderType" type="hidden" value=""/>
<input id="shoulderId" type="hidden" value=""/>
<input id="articleTitle" type="hidden" value="트럼프 “동맹 한국과 코로나19 긴밀 협력”… 美 26개 주 확산"/>
<input id="articleSection" type="hidden" value="국제"/>
<input id="articleContents" type="hidden" value="
안정성 강조 의도지만 누적 사망 15명 달해도널드 트럼프 미국 대통령이 6일 조지아주 애틀란타의 질병통제예방센터를 방문해 직원들에게 신종 코로나바이러스 감염증 사태와 관련한 정부의 입장을 설명하고 있다. 애틀란타=AP 연합뉴스도널드 트럼프 미국 대통령이 한국과의 동맹 관계를 내세워 “신종 코로나바이러스 감염증(코로나19) 사태에 긴밀히 협력하고 있다”고 말했다. 겉으론 협력을 강조했지만 한국의 심각한 감염병 상황을 언급하면서 미국의 안정성을 부각하려는 의도가 강했다.  트럼프 대통령은 6일(현지시간) 조지아주 애틀란타의 미 질병통제예방센터(CDC)를 찾아 “그들(한국)은 우리와 매우 다른 입장이다. 한국은 감염자가 많고 미국은 그렇지 않다”고 말했다. 그러면서 “한국은 동맹이라 아주 밀접하게 협력하고 있다”고 강조했다. 트럼프는 엉뚱하게 한미 자유무역협정(FTA) 문제를 끌어 들이기도 했다. 그는 “우리는 동맹이지만 개정 이전 한미 FTA는 불공정했다”고 말한 뒤 “(코로나19) 검사도 비슷하며 사실 한국은 미국에 전화해 이 사람들(CDC 당국자)에게 조언을 구하고 있다”고 주장했다. 미국 공중보건의 우수성을 자랑하려는 취지였다. 그는 감염증 진단ㆍ검사 관련 질문이 다시 나오자 “그들(한국)은 검사를 하는 게 아니라 샘플조사를 한다. 차(드라이브 스루)로 지나가면서 샘플을 제공한다”면서 “우리도 할 수 있지만 효과적이지 않다”고 설명했다. 트럼프는 미국인들이 편안하게 지내도 되느냐는 질문에 “만약 중국에, 이탈리아의 특정 지역에, 한국에 가는 문제를 지금 말하는 것이라면 다른 결정”라면서도 “편히 느껴도 된다”고 말했다. 미 행정부는 중국에 ‘입국 금지’를, 한국 대구와 이탈리아 북부지역 2곳에는 ‘여행 금지’ 권고를 한 상태다. 그는 중국 이탈리아 한국의 사례를 거론하며 미국의 코로나19 사망ㆍ확진자가 적다는 점을 수시로 강조했다. 트럼프는 이날 CDC 방문을 비롯해 코로나19 대응 행보를 이어가고 있다. 11월 대선을 앞두고 선거전이 본격화하면서 여론 악화를 막으려는 의지로 읽힌다. 그러나 그의 바람과 달리 미국 내 코로나19는 빠른 속도로 확산하고 있다. 감염증 발원지인 워싱턴주(州)를 넘어 동부(뉴욕주)에서도 확진자가 속출하는 등 벌써 26개 주에서 감염 환자가 보고됐다. CNN방송은 CDC를 인용해 “미국 전역의 코로나19 확진자가 282명에 달한다”고 전했다. 사망자도 15명이나 된다. 전날 캘리포니아주에서 사망한 71세 남성이 다녀간 크루즈선 ‘그랜드 프린세스’호에서도 21명의 무더기 감염이 확인됐다. 미국의 코로나19 대책을 총괄하는 마이크 펜스 부통령은 이날 “주말에 크루즈선을 항구로 이동시키고 탑승자 전원의 감염 여부를 검사할 계획”이라고 말했다. 현재 이 배에는 3,533명의 승객 및 승무원이 승선해 있다. 김이삭 기자 hiro@hankookilbo.com"/>
<input id="articleImageUrl" type="hidden" value="http://newsimg.hankookilbo.com/cms/articlerelease/2020/03/07/202003071089316921_2.jpg"/>
<input id="serverUrl" type="hidden" value="https://www.hankookilbo.com"/>
<script src="/js/ui.js"></script>
<script src="/js/split.js"></script>


<script>
    // 인풋 자동 완성 기능 때문에 fake input 생성
    function offAutocomplete() {
        var E = $('input[type="text"][autocomplete="off"]');
        for (var i = 0 ; i < E.length ; i++) {
            fakeInput = '<input type="text" style="position:absolute;left:-9999px;top:-9999px;width:1px;height:1px;" tabindex="-1">';
            $(fakeInput).insertAfter(E[i]);
        }
    }

    try {
        var userAgent = window.navigator.userAgent;
        var isChrome = userAgent.indexOf('Chrome');
        var isChromeMobile = userAgent.indexOf('CriOS');
        if (isChrome || isChromeMobile) {
            offAutocomplete();
        }
    } catch (e) {

    }
</script><!-- endPage -->
<script src="/js/split/endPage.js"></script>
<script src="/js/end-footer-script.js"></script>
<script src="/js/split/slickExec.js"></script>
<!-- // endPage -->

</body>
</html>
